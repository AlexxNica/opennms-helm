{"version":3,"sources":["../../src/spec/fault_ds_datasource_spec.js"],"names":["Q","_","UI","API","Mapping","FilterCloner","describe","uiSegmentSrv","newSegment","value","type","newKey","key","newOperator","operator","newFake","text","cssClass","segment","fake","newPlusButton","newKeyValue","newCondition","condition","mapping","ComparatorMapping","it","done","expect","getUiComparator","Comparators","EQ","to","eql","NE","GE","LE","GT","LT","NULL","throw","label","NOTNULL","LIKE","ILIKE","getApiComparator","NEQ","OperatorMapping","getUiOperator","Operators","AND","OR","getApiOperator","RestrictionMapping","getUiRestriction","Restriction","RestrictionDTO","nestedRestriction","NestedRestriction","withOrRestriction","actualUiQuery","expectedUiQuery","Query","addClause","Clause","ClauseMapping","clause","getApiClause","FilterMapping","apiFilter","Filter","limit","getApiFilter","withClause","uiFilter","getUiFilter","otherFilter","cloneFilter","jsonString","JSON","stringify","object","parse","not","be","an","instanceof","filterObject","restriction","asRestrictionDTO","setAttribute","KEY_PLACEHOLDER","setComparator","setValue","VALUE_PLACEHOLDER","Object","keys","forEach","query","beforeEach","clauses","length","createNewEmptyClause","createNewEmptyNestedClause","control","Controls","AddControl","filter","newClause","action","RemoveControl","each","newQuery","AddNestedControl","have","lengthOf","segments","removeClause","root","clear","getQueryString","expected","verifyNoControls","controls","verifyFullControls","verifyControls","index","updateControls"],"mappings":"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","file":"fault_ds_datasource_spec.js","sourcesContent":["import Q from \"q\";\nimport _ from 'lodash';\nimport {UI} from '../datasources/fault-ds/UI';\nimport {API} from '../opennms';\nimport {Mapping} from '../datasources/fault-ds/Mapping';\nimport {FilterCloner} from '../datasources/fault-ds/FilterCloner';\n\ndescribe(\"OpenNMS_FaultManagement_Datasource\", function() {\n    let uiSegmentSrv = {\n        newSegment: function (value, type) {\n            return {value: value, type: type};\n        },\n        newKey: function (key) {\n            return this.newSegment(key, 'key');\n        },\n        newOperator: function (operator) {\n            return this.newSegment(operator, 'operator');\n        },\n        newFake: function (text, type, cssClass) {\n            let segment = this.newSegment(text, type);\n            segment.fake = true;\n            return segment;\n        },\n        newPlusButton: function () {\n            return this.newFake('', 'plus-button');\n        },\n        newKeyValue: function (value) {\n            return this.newSegment(value, 'value');\n        },\n        newCondition: function (condition) {\n            return this.newSegment(condition, 'condition');\n        }\n    };\n\n    describe('Mapping', function () {\n        describe('ComparatorMapping', function () {\n            let mapping = new Mapping.ComparatorMapping();\n\n            it(\"should map from api to ui comparator\", function (done) {\n                expect(mapping.getUiComparator(API.Comparators.EQ)).to.eql(\"=\");\n                expect(mapping.getUiComparator(API.Comparators.NE)).to.eql(\"!=\");\n                expect(mapping.getUiComparator(API.Comparators.GE)).to.eql(\">=\");\n                expect(mapping.getUiComparator(API.Comparators.LE)).to.eql(\"<=\");\n                expect(mapping.getUiComparator(API.Comparators.GT)).to.eql(\">\");\n                expect(mapping.getUiComparator(API.Comparators.LT)).to.eql(\"<\");\n\n                done();\n            });\n\n            it(\"should NOT map from api to ui comparator\", function(done) {\n                expect(() => mapping.getUiComparator(API.Comparators.NULL)).to.throw(\"No matching UI comparator found for '\" + API.Comparators.NULL.label + \"'.\");\n                expect(() => mapping.getUiComparator(API.Comparators.NOTNULL)).to.throw(\"No matching UI comparator found for '\" + API.Comparators.NOTNULL.label + \"'.\");\n                expect(() => mapping.getUiComparator(API.Comparators.LIKE)).to.throw(\"No matching UI comparator found for '\" + API.Comparators.LIKE.label + \"'.\");\n                expect(() => mapping.getUiComparator(API.Comparators.ILIKE)).to.throw(\"No matching UI comparator found for '\" + API.Comparators.ILIKE.label + \"'.\");\n\n                done();\n            });\n\n            it(\"should map from ui to api comparator\", function (done) {\n                expect(mapping.getApiComparator(UI.Comparators.EQ)).to.eql(API.Comparators.EQ);\n                expect(mapping.getApiComparator(UI.Comparators.NEQ)).to.eql(API.Comparators.NE);\n                expect(mapping.getApiComparator(UI.Comparators.GE)).to.eql(API.Comparators.GE);\n                expect(mapping.getApiComparator(UI.Comparators.LE)).to.eql(API.Comparators.LE);\n                expect(mapping.getApiComparator(UI.Comparators.GT)).to.eql(API.Comparators.GT);\n                expect(mapping.getApiComparator(UI.Comparators.LT)).to.eql(API.Comparators.LT);\n\n                done();\n            });\n        });\n\n        describe('OperatorMapping', function () {\n            let mapping = new Mapping.OperatorMapping();\n\n            it(\"should map from api to ui operator\", function (done) {\n                expect(mapping.getUiOperator(API.Operators.AND)).to.eql(\"AND\");\n                expect(mapping.getUiOperator(API.Operators.OR)).to.eql(\"OR\");\n\n                done();\n            });\n\n            it(\"should map from ui to api operator\", function(done) {\n                expect(mapping.getApiOperator(UI.Operators.AND)).to.eql(API.Operators.AND);\n                expect(mapping.getApiOperator(UI.Operators.OR)).to.eql(API.Operators.OR);\n\n                done();\n            })\n        });\n\n        describe('RestrictionMapping', function () {\n            let mapping = new Mapping.RestrictionMapping(uiSegmentSrv);\n\n            it(\"should map from api restriction\", function (done) {\n                expect(mapping.getUiRestriction(new API.Restriction(\"my-property\", API.Comparators.LE, 'some-value')))\n                    .to.eql(new UI.Restriction(uiSegmentSrv, new UI.RestrictionDTO('my-property', '<=', 'some-value')));\n                done();\n            });\n\n            it(\"should map from api nested restriction\", function (done) {\n                const nestedRestriction = new API.NestedRestriction()\n                    .withOrRestriction(new API.Restriction(\"my-property\", API.Comparators.LE, 'some-value'))\n                    .withOrRestriction(new API.Restriction(\"my-property\", API.Comparators.GE, 'some-other-value'));\n\n                const actualUiQuery = mapping.getUiRestriction(nestedRestriction);\n\n                const expectedUiQuery = new UI.Query(uiSegmentSrv);\n                expectedUiQuery.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.OR, new UI.Restriction(uiSegmentSrv, new UI.RestrictionDTO(\"my-property\", \"<=\", \"some-value\"))));\n                expectedUiQuery.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.OR, new UI.Restriction(uiSegmentSrv, new UI.RestrictionDTO(\"my-property\", \">=\", \"some-other-value\"))));\n\n                expect(actualUiQuery).to.eql(expectedUiQuery);\n\n                done();\n            });\n\n        });\n\n        describe('ClauseMapping', function() {\n            let mapping = new Mapping.ClauseMapping(uiSegmentSrv);\n\n           it ('should ignore not initialized clauses (restrictionDTO is null)', function(done) {\n\n               let clause = new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.Restriction(this.uiSegmentSrv));\n               expect(mapping.getApiClause(clause)).to.eql(null);\n\n               done();\n           }) ;\n        });\n\n        describe('FilterMapping', function() {\n\n            let mapping = new Mapping.FilterMapping(uiSegmentSrv);\n\n            it ('should map from empty ui to api filter', function(done) {\n                let apiFilter = new API.Filter();\n                apiFilter.limit = 0;\n                expect(mapping.getApiFilter(new UI.Filter(uiSegmentSrv))).to.eql(apiFilter);\n\n                done();\n            });\n\n            it ('should map from api to ui filter and vice versa', function(done) {\n                const apiFilter = new API.Filter()\n                    .withClause(new API.Clause(new API.Restriction(\"key\", API.Comparators.EQ, \"value\"), API.Operators.OR))\n                    .withClause(new API.Clause(new API.Restriction(\"key2\", API.Comparators.NE, \"value2\"), API.Operators.AND));\n                apiFilter.limit = 0;\n\n                const uiFilter = new UI.Filter(uiSegmentSrv)\n                    .withClause(new UI.Clause(uiSegmentSrv, UI.Operators.OR, new UI.RestrictionDTO(\"key\", \"=\", \"value\")))\n                    .withClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"key2\", \"!=\", \"value2\")));\n\n                expect(mapping.getUiFilter(apiFilter)).to.eql(uiFilter);\n                expect(mapping.getApiFilter(uiFilter)).to.eql(apiFilter);\n\n                done();\n            });\n        });\n\n    });\n\n    describe('FilterCloner', function() {\n\n        let apiFilter = new API.Filter()\n            .withClause(new API.Clause(new API.Restriction('key', API.Comparators.EQ, 'value'), API.Operators.AND))\n            .withClause(new API.Clause(new API.Restriction('key2', API.Comparators.EQ, 'value2'), API.Operators.AND))\n            .withClause(new API.Clause(new API.NestedRestriction()\n                .withClause(new API.Clause(new API.Restriction(\"key3\", API.Comparators.NE, \"value3\"), API.Operators.OR)), API.Operators.AND));\n\n        it('should clone already initialized', function(done) {\n            const otherFilter = new FilterCloner().cloneFilter(apiFilter);\n            expect(apiFilter).to.eql(otherFilter);\n\n            done();\n        });\n\n        it('should clone', function(done) {\n            const jsonString = JSON.stringify(apiFilter);\n            const object = JSON.parse(jsonString);\n            expect(object).not.to.be.an.instanceof(API.Filter);\n\n            const filterObject = new FilterCloner().cloneFilter(object);\n            expect(filterObject).to.be.an.instanceof(API.Filter);\n            expect(apiFilter).to.eql(filterObject);\n\n            done();\n        });\n\n\n    });\n\n    describe(\"UI.Restriction\", function() {\n        // See HELM-25\n        it('should only convert to DTO when fully defined', () => {\n            // Should be null when not initialized\n            const restriction = new UI.Restriction(uiSegmentSrv);\n            expect(restriction.asRestrictionDTO()).to.eql(null);\n\n            // Should be null when initialized with defaults\n            restriction.setAttribute(UI.Restriction.KEY_PLACEHOLDER);\n            restriction.setComparator(\"=\");\n            restriction.setValue(UI.Restriction.VALUE_PLACEHOLDER);\n\n            // Should be null for all other Comparators\n            Object.keys(UI.Comparators).forEach(key => {\n                restriction.setComparator(UI.Comparators[key]);\n                expect(restriction.asRestrictionDTO()).to.eql(null);\n            });\n\n            // Should be null if value is set\n            restriction.setValue(\"my value\");\n            expect(restriction.asRestrictionDTO()).to.eql(null);\n\n            // Should be null if attribute is set\n            restriction.setValue(UI.Restriction.VALUE_PLACEHOLDER);\n            restriction.setAttribute(\"my attribute\");\n            expect(restriction.asRestrictionDTO()).to.eql(null);\n\n            // should not be null if attribute and value is set\n            restriction.setAttribute(\"my attribute\");\n            restriction.setComparator(\"=\");\n            restriction.setValue(\"my value\");\n            expect(restriction.asRestrictionDTO()).not.to.eql(null);\n            expect(restriction.asRestrictionDTO()).to.eql(new UI.RestrictionDTO(\"my attribute\", \"=\", \"my value\"))\n        });\n    });\n\n    describe(\"UI.Query\", function() {\n        let query;\n\n        beforeEach(function () {\n            query = new UI.Filter(uiSegmentSrv).query;\n        });\n\n        it('should add new empty clause', function(done) {\n            expect(query.clauses.length).to.eql(0);\n            query.createNewEmptyClause();\n            expect(query.clauses.length).to.eql(1);\n\n            done();\n        });\n\n        it('should add new empty nested clause', function(done) {\n\n            expect(query.clauses.length).to.eql(0);\n            query.createNewEmptyNestedClause();\n            expect(query.clauses.length).to.eql(1);\n\n            expect(query.clauses[0].restriction.clauses.length).to.eql(1);\n\n            done();\n        });\n    });\n\n    describe(\"UI.Controls\", function() {\n\n        let uiFilter;\n\n        beforeEach(function() {\n            uiFilter = new UI.Filter(uiSegmentSrv);\n        });\n\n        describe('AddControl', function() {\n            let control = new UI.Controls.AddControl();\n\n            describe(\"filter\", function() {\n                it('always show, except for nested controls', function(done) {\n                    expect(control.filter(uiFilter.query, new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.Restriction(uiSegmentSrv)))).to.eql(true);\n\n                    expect(control.filter(uiFilter.query, new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.Query(uiSegmentSrv)))).to.eql(false);\n\n                    done();\n                })\n            });\n\n            describe(\"action\", function() {\n\n              it ('should add new empty clause', function(done) {\n                  const newClause = uiFilter.query.createNewEmptyClause();\n                  expect(uiFilter.query.clauses.length).to.eql(1);\n\n                  control.action(uiFilter.query, newClause);\n                  expect(uiFilter.query.clauses.length).to.eql(2);\n\n                  done();\n              });\n            });\n\n        });\n\n        describe('RemoveControl', function() {\n\n            let control = new UI.Controls.RemoveControl();\n\n            describe(\"filter\", function() {\n                it('do not show on first empty clause', function(done) {\n                    uiFilter.query.createNewEmptyClause();\n\n                    expect(control.filter(uiFilter.query, uiFilter.query.clauses[0])).to.eql(false);\n\n                    done();\n                });\n\n                it('show on nested and children of nested clause', function(done) {\n\n                    uiFilter.query.createNewEmptyNestedClause();\n\n                    expect(uiFilter.query.clauses.length).to.eql(1);\n                    expect(control.filter(uiFilter.query, uiFilter.query.clauses[0])).to.eql(false); // no control on nested clause\n                    expect(control.filter(uiFilter.query.clauses[0].restriction, uiFilter.query.clauses[0].restriction.clauses[0])).to.eql(true); // control on clause\n\n                    done();\n                });\n\n                it('show on other clauses', function(done) {\n                    uiFilter.query.createNewEmptyClause();\n                    uiFilter.query.createNewEmptyClause();\n\n                    _.each(uiFilter.query.clauses, clause => {\n                        expect(control.filter(uiFilter.query, clause)).to.eql(true);\n                    });\n\n                    done();\n                });\n            });\n\n\n            describe(\"action\", function() {\n                it ('should remove clause', function(done) {\n                    // add dummy clause\n                    uiFilter.query.createNewEmptyClause();\n                    expect(uiFilter.query.clauses.length).to.eql(1);\n\n                    // perform action\n                    control.action(uiFilter.query, uiFilter.query.clauses[0]);\n\n                    // verify it was removed\n                    expect(uiFilter.query.clauses.length).to.eql(0);\n\n                    done();\n                });\n\n                it ('should remove query from parent clause if last clause was removed', function(done) {\n                    // dummy clause added yet\n                    uiFilter.query.createNewEmptyClause();\n                    expect(uiFilter.query.clauses.length).to.eql(1);\n\n                    // add nested clause\n                    const newQuery = uiFilter.query.createNewEmptyNestedClause();\n                    expect(uiFilter.query.clauses.length).to.eql(2);\n                    expect(newQuery.clauses.length).to.eql(1);\n\n                    // perform action ...\n                    control.action(newQuery, newQuery.clauses[0]);\n\n                    // ... and verify that it was removed\n                    expect(newQuery.clauses.length).to.eql(0);\n                    expect(uiFilter.query.clauses.length).to.eql(1);\n\n                    done();\n                });\n            });\n\n        });\n\n        describe('NestedControl', function() {\n            let control = new UI.Controls.AddNestedControl();\n\n            describe(\"filter\", function() {\n                it('show on all 1st level clauses, except nested clause', function(done) {\n                    uiFilter.query.createNewEmptyClause();\n                    uiFilter.query.createNewEmptyClause();\n                    uiFilter.query.createNewEmptyClause();\n\n                    _.each(uiFilter.query.clauses, clause => {\n                        expect(control.filter(uiFilter.query, clause)).to.eql(true);\n                    });\n\n                    // Try nested\n                    uiFilter.query.createNewEmptyNestedClause();\n                    expect(control.filter(uiFilter.query, uiFilter.query.clauses[3])).to.eql(false);\n\n                    done();\n                });\n\n                it('do not show on 2nd level clauses ', function(done) {\n                    uiFilter.query.createNewEmptyNestedClause();\n                    uiFilter.query.createNewEmptyClause();\n\n                    const newQuery = uiFilter.query.clauses[0].restriction;\n                    newQuery.createNewEmptyClause();\n                    newQuery.createNewEmptyClause();\n                    newQuery.createNewEmptyClause();\n\n                    // verify 2nd level\n                    _.each(newQuery.clauses, clause => {\n                        expect(control.filter(newQuery, clause)).to.eql(false);\n                    });\n\n                    // verify 1st level\n                    expect(control.filter(uiFilter.query, uiFilter.query.clauses[0])).to.eql(false);\n                    expect(control.filter(uiFilter.query, uiFilter.query.clauses[1])).to.eql(true);\n\n\n                    done();\n                })\n            });\n        });\n    });\n\n    describe('UI.Filter', function () {\n        let uiFilter;\n\n        beforeEach(function () {\n            uiFilter = new UI.Filter(uiSegmentSrv);\n        });\n\n        describe('addClause', function () {\n            it('should allow adding a single restriction', function (done) {\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"severity\", UI.Comparators.EQ, 'CLEARED')));\n                expect(uiFilter.query.clauses).to.have.lengthOf(1);\n                expect(uiFilter.query.clauses[0].restriction.segments).to.have.lengthOf(3);\n                expect(uiFilter.query.clauses[0].restriction.segments[0].value).to.eql('severity');\n                expect(uiFilter.query.clauses[0].restriction.segments[1].value).to.eql(\"=\");\n                expect(uiFilter.query.clauses[0].restriction.segments[2].value).to.eql('CLEARED');\n                expect(uiFilter.query.clauses[0].operator.value).to.eql(\"AND\");\n\n                done();\n            });\n\n            it('should fail when unsupported type', function (done) {\n\n                expect(() => uiFilter.addClause(\"string\")).to.throw(\"Clause type is not supported\");\n\n                done();\n            })\n        });\n\n        describe('removeClause', function() {\n            const clause = new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"key\", \"=\", \"value\"));\n\n            it(\"should not remove non existing clause\", function(done) {\n                expect(uiFilter.query.clauses).to.have.lengthOf(0);\n                uiFilter.withClause(clause);\n                uiFilter.removeClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"x\", \"=\", \"0\")));\n                expect(uiFilter.query.clauses).to.have.lengthOf(1);\n\n                done();\n            });\n\n            it(\"should remove existing clause\", function(done) {\n                expect(uiFilter.query.clauses).to.have.lengthOf(0);\n                uiFilter.withClause(clause);\n                expect(uiFilter.query.clauses).to.have.lengthOf(1);\n                uiFilter.removeClause(clause);\n                expect(uiFilter.query.clauses).to.have.lengthOf(0);\n\n                done();\n            });\n        });\n\n        describe('clear', function () {\n            it('should reset query', function (done) {\n                uiFilter.query.root = false; // make it pass\n                expect(uiFilter.query).to.eql(new UI.Query(uiSegmentSrv));\n\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"key\", \"=\", \"value\")));\n                expect(uiFilter.query).not.to.eql(new UI.Query(uiSegmentSrv));\n\n                uiFilter.clear();\n                expect(uiFilter.query).to.eql(new UI.Query(uiSegmentSrv));\n\n                done();\n            });\n        });\n\n        describe('getQueryString', function () {\n            it('should work with empty clause', function (done) {\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms\");\n                done();\n            });\n\n            it('should work with single clause', function (done) {\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO('severity', UI.Comparators.EQ, 'MINOR')));\n\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where severity = 'MINOR'\");\n                done();\n            });\n\n            it('should not include not initialized clauses (restrictionDTO is not fully initialized)', function(done) {\n                const expected = \"select all alarms where severity >= 'WARNING'\";\n\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.OR, new UI.RestrictionDTO(\"severity\", UI.Comparators.GE, 'WARNING')));\n                expect(uiFilter.getQueryString()).to.eql(expected);\n\n                // It does not have any attribute, comparator or value data (valid state), but should not be considered when generating the string\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.OR, new UI.Restriction(uiSegmentSrv)));\n                expect(uiFilter.getQueryString()).to.eql(expected);\n\n                done();\n            });\n\n\n            it('should handle null values', function (done) {\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"location\", UI.Comparators.EQ, \"null\")));\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where location is null\");\n\n                uiFilter.clear();\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"location\", UI.Comparators.NEQ, \"null\")));\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where location is not null\");\n\n                done();\n            });\n\n            it('should work with multiple clauses', function (done) {\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO('severity', UI.Comparators.EQ, 'MINOR')));\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.OR, new UI.RestrictionDTO('severity', UI.Comparators.EQ, 'MAJOR')));\n\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where severity = 'MINOR' or severity = 'MAJOR'\");\n\n                uiFilter.clear();\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO('severity', UI.Comparators.EQ, 'MINOR')));\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO('severity', UI.Comparators.EQ, 'MAJOR')));\n\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where severity = 'MINOR' and severity = 'MAJOR'\");\n\n                done();\n            });\n\n            it('should work with nested clauses', function (done) {\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO('location', UI.Comparators.EQ, 'Stuttgart')));\n                uiFilter.addClause(new API.Clause(new API.NestedRestriction()\n                    .withClause(new API.Clause(new API.Restriction('severity', API.Comparators.GE, 'WARNING'), API.Operators.AND))\n                    .withClause(new API.Clause(new API.Restriction('severity', API.Comparators.LE, 'MAJOR'), API.Operators.AND)), API.Operators.OR));\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where location = 'Stuttgart' or (severity >= 'WARNING' and severity <= 'MAJOR')\");\n\n\n                // let's try the other way around\n                uiFilter.clear();\n                uiFilter.addClause(new API.Clause(new API.NestedRestriction()\n                    .withClause(new API.Clause(new API.Restriction('severity', API.Comparators.GE, 'WARNING'), API.Operators.AND))\n                    .withClause(new API.Clause(new API.Restriction('severity', API.Comparators.LE, 'MAJOR'), API.Operators.AND)), API.Operators.OR));\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO('location', UI.Comparators.EQ, 'Stuttgart')));\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where (severity >= 'WARNING' and severity <= 'MAJOR') and location = 'Stuttgart'\");\n\n                // let's try 2 nested restrictions\n                uiFilter.clear();\n                uiFilter.addClause(new API.Clause(new API.NestedRestriction()\n                    .withClause(new API.Clause(new API.Restriction('location', API.Comparators.EQ, 'Stuttgart'), API.Operators.OR))\n                    .withClause(new API.Clause(new API.Restriction('location', API.Comparators.EQ, 'Fulda'), API.Operators.OR)), API.Operators.AND)\n                );\n                uiFilter.addClause(new API.Clause(new API.NestedRestriction()\n                    .withClause(new API.Clause(new API.Restriction('severity', API.Comparators.GE, 'WARNING'), API.Operators.AND))\n                    .withClause(new API.Clause(new API.Restriction('severity', API.Comparators.LE, 'MAJOR'), API.Operators.AND)), API.Operators.AND)\n                );\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where (location = 'Stuttgart' or location = 'Fulda') and (severity >= 'WARNING' and severity <= 'MAJOR')\");\n\n                done();\n            });\n\n            it('should handle deep nested clauses', function (done) {\n                const nestedRestriction = new API.NestedRestriction()\n                    .withClause(new API.Clause(new API.Restriction(\"severity\", API.Comparators.GE, 'WARNING'), API.Operators.AND))\n                    .withClause(new API.Clause(new API.Restriction(\"severity\", API.Comparators.LE, 'MAJOR'), API.Operators.AND))\n                    .withClause(new API.Clause(new API.NestedRestriction()\n                        .withClause(new API.Clause(new API.Restriction(\"location\", API.Comparators.EQ, \"Fulda\"), API.Operators.OR)), API.Operators.OR), API.Operators.OR);\n\n                uiFilter.addClause(new API.Clause(nestedRestriction, API.Operators.OR));\n\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where (severity >= 'WARNING' and severity <= 'MAJOR' or (location = 'Fulda'))\");\n\n                done();\n            });\n\n            it('should render real nested clauses correctly', function(done) {\n                // Dummy clause should not influence the query\n                uiFilter.query.createNewEmptyNestedClause();\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms\");\n\n                // update the values\n                const query = uiFilter.query.clauses[0].restriction;\n                query.clauses[0].restriction.setAttribute(\"key\");\n                query.clauses[0].restriction.setComparator(\"=\");\n                query.clauses[0].restriction.setValue(\"value\");\n\n                // should now be influenced\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where (key = 'value')\");\n\n                done();\n            });\n        });\n\n        describe(\"updateControls\", function() {\n\n            const verifyNoControls = function(query) {\n                _.each(query.clauses, clause => {\n                    expect(clause.controls.length).to.eql(0);\n                });\n            };\n\n            const verifyFullControls = function(clause) {\n                verifyControls(clause, [UI.Controls.RemoveControl, UI.Controls.AddControl, UI.Controls.AddNestedControl]);\n            };\n\n            const verifyControls = function(clause, controls = []) {\n                expect(clause.controls.length).to.eql(controls.length); // add, add nested and remove\n                if (controls.length > 0) {\n                    _.each(controls, (control, index) => {\n                       expect(clause.controls[index]).to.be.an.instanceof(control)\n                    });\n                }\n            };\n\n            it ('should create controls for add and add nested', function(done) {\n                verifyNoControls(uiFilter.query);\n                expect(uiFilter.query.clauses.length).to.eql(0);\n\n                // Update controls\n                uiFilter.updateControls();\n                expect(uiFilter.query.clauses.length).to.eql(1); // dummy row\n\n                // now the controls should be there\n                _.each(uiFilter.query.clauses, clause => {\n                    verifyControls(clause, [UI.Controls.AddControl, UI.Controls.AddNestedControl]);\n                });\n\n                done();\n            });\n\n            it ('should create controls for add, add nested and remove', function(done) {\n                verifyNoControls(uiFilter.query);\n\n                uiFilter.query.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.Restriction(uiSegmentSrv, new UI.RestrictionDTO(\"key\", \"=\", \"value\"))));\n                uiFilter.updateControls();\n\n                expect(uiFilter.query.clauses.length).to.eql(1);\n                _.each(uiFilter.query.clauses, clause => {\n                    verifyFullControls(clause);\n                });\n\n                done();\n\n            });\n\n            it ('should not add nested controls on level 2', function(done) {\n                verifyNoControls(uiFilter.query);\n\n                uiFilter.query.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.Restriction(uiSegmentSrv, new UI.RestrictionDTO(\"key\", \"=\", \"value\"))));\n                uiFilter.query.createNewEmptyNestedClause();\n                uiFilter.updateControls();\n\n                expect(uiFilter.query.clauses.length).to.eql(2);\n                expect(uiFilter.query.clauses[1].restriction.clauses.length).to.eql(1);\n                verifyFullControls(uiFilter.query.clauses[0]); // all controls on simple clause\n                verifyControls(uiFilter.query.clauses[1], [ ]); // no controls on nested clause\n                verifyControls(uiFilter.query.clauses[1].restriction.clauses[0], [ UI.Controls.RemoveControl, UI.Controls.AddControl ]); // limited controls on clause of nested clause\n\n                done();\n            });\n        })\n\n    });\n\n});"]}