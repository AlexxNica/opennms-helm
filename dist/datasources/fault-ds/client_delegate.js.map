{"version":3,"sources":["../../../src/datasources/fault-ds/client_delegate.js"],"names":["API","Client","Rest","DAO","Model","_","ClientDelegate","settings","backendSrv","$q","type","url","name","searchLimit","server","OnmsServer","http","GrafanaHTTP","client","clientWithMetadata","undefined","self","getMetadata","then","metadata","getClientWithMetadata","alarms","filter","getAlarmDao","alarmDao","find","alarmId","get","options","datasourceRequest","method","headers","params","data","acknowledge","action","supportedActions","indexOf","message","sticky","saveStickyMemo","deleteStickyMemo","journal","saveJournalMemo","deleteJournalMemo","limit","results","count","totalCount","node","user","query","location","category","severities","map","Severities","severity","id","label","when","element","operators","Operators","operator","searchProperties","propertyId","getProperties","properties","property","findProperty","comparators","getComparators","length","console","log","Comparators","EQ"],"mappings":"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","file":"client_delegate.js","sourcesContent":["import {API, Client, Rest, DAO, Model} from '../../opennms'\nimport _ from 'lodash';\n\nexport class ClientDelegate {\n\n    constructor(settings, backendSrv, $q) {\n        this.type = settings.type;\n        this.url = settings.url;\n        this.name = settings.name;\n        this.backendSrv = backendSrv;\n        this.searchLimit = 1000;\n        this.$q = $q;\n\n        let server = new API.OnmsServer(this.name, this.url);\n        let http = new Rest.GrafanaHTTP(this.backendSrv, server);\n        this.client = new Client(http);\n        this.client.server = server;\n        this.clientWithMetadata = undefined;\n     }\n\n    getClientWithMetadata() {\n        if (!this.clientWithMetadata) {\n              let self = this;\n              this.clientWithMetadata = Client.getMetadata(this.client.server, this.client.http)\n                .then(function(metadata) {\n                    self.client.server.metadata = metadata;\n                    return self.client;\n                });\n        }\n        return this.clientWithMetadata;\n      }\n\n    getAlarmDao() {\n        return this.getClientWithMetadata().then(function(client) {\n            return client.alarms();\n        });\n    }\n\n    findAlarms(filter) {\n        return this.getAlarmDao()\n            .then(function(alarmDao) {\n                return alarmDao.find(filter);\n            });\n    }\n\n    getAlarm(alarmId) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n            return alarmDao.get(alarmId);\n        });\n    }\n\n    doUpdate(alarmId, options) {\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/api/v2/alarms/' + alarmId,\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            params: options || {},\n            data: '' // empty data or Content-Type header is reset\n        });\n    }\n\n    doAck(alarmId) {\n        return this.getAlarmDao()\n            .then(function(alarmDao) {\n                return alarmDao.acknowledge(alarmId);\n            });\n    }\n\n    doTicketAction(alarmId, action) {\n        var supportedActions = [\"create\", \"update\", \"close\"];\n        if (supportedActions.indexOf(action) < 0) {\n            throw {message: \"Action '\" + action + \"' not supported.\"};\n        }\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/api/v2/alarms/' + alarmId + \"/ticket/\" + action,\n            method: 'POST',\n        });\n    }\n\n    saveSticky(alarmId, sticky) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.saveStickyMemo(alarmId, sticky);\n        });\n    }\n\n    deleteSticky(alarmId) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.deleteStickyMemo(alarmId);\n        });\n    }\n\n    saveJournal(alarmId, journal) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.saveJournalMemo(alarmId, journal);\n        });\n    }\n\n    deleteJournal(alarmId) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.deleteJournalMemo(alarmId);\n        });\n    }\n\n    findNodes(options) {\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n                url: self.url + '/rest/nodes',\n                method: 'GET',\n                params: {\n                    limit: options.limit || self.searchLimit,\n                }\n            }).then(function (results) {\n                    return {\n                        'count': results.data.count,\n                        'totalCount': results.data.totalCount,\n                        'rows': results.data.node\n                    };\n                });\n    }\n\n    findUsers(options) {\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/rest/users',\n            method: 'GET',\n            params: {\n                limit: options.limit || self.searchLimit, // TODO MVR this is not implemented on the user rest service\n            }\n        }).then(function (results) {\n            return {\n                'count': results.data.count,\n                'totalCount': results.data.totalCount,\n                'rows': results.data.user\n            };\n        });\n    }\n\n    findLocations(query) {\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/api/v2/monitoringLocations',\n            method: 'GET',\n            params: {\n                limit: query.limit || self.searchLimit,\n            }\n        }).then(function (results) {\n            return {\n                'count': results.data.count,\n                'totalCount': results.data.totalCount,\n                'rows': results.data.location\n            };\n        });\n    }\n\n    findCategories(options) {\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/rest/categories',\n            method: 'GET',\n            params: {\n                limit: options.limit || self.searchLimit, // TODO MVR this is not implemented on the rest service\n            }\n        }).then(function (results) {\n            return {\n                'count': results.data.count,\n                'totalCount': results.data.totalCount,\n                'rows': results.data.category\n            };\n        });\n    }\n\n    findSeverities(options) {\n        var severities = _.map(Model.Severities, function(severity) {\n            return {\n                id: severity.id,\n                label: severity.label\n            };\n        });\n        return this.$q.when(severities);\n    }\n\n    findServices(options) {\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/rest/foreignSourcesConfig/services/default',\n            method: 'GET',\n            params : {\n                limit: options.limit || self.searchLimit\n            }\n        }).then(function (results) {\n            return {\n                'count': results.data.count,\n                'totalCount': results.data.totalCount,\n                'rows': results.data.element\n            };\n        });\n    }\n\n    findOperators() {\n        var operators = _.map(API.Operators, function(operator) {\n            return {\n                id: operator.id,\n                label: operator.label\n            }\n        });\n        return this.$q.when(operators);\n    }\n\n    getProperties() {\n        return this.getAlarmDao()\n            .then(alarmDao => {\n                return alarmDao.searchProperties();\n            });\n    }\n\n    // TODO MVR it would be nice to query the rest endpoint directly for the property, rather than queriing for all of the elements\n    findProperty(propertyId) {\n        return this.getProperties()\n            .then(properties => {\n                return _.find(properties, function(property) {\n                    return property.id === propertyId;\n                });\n            })\n    }\n\n    getPropertyComparators(propertyId) {\n        return this.findProperty(propertyId)\n            .then(property => {\n                if (property) {\n                    const comparators = property.type.getComparators();\n                    if (comparators && comparators.length > 0) {\n                        return comparators;\n                    }\n                }\n                console.log(\"No comparators found for property with id '\" + propertyId + \"'. Falling back to EQ.\");\n                // This may be the case when the user entered a property, which does not exist\n                // therefore fallback to EQ\n                return [ API.Comparators.EQ ];\n            });\n    }\n}"]}