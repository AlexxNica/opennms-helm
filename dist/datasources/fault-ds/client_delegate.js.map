{"version":3,"sources":["../../../src/datasources/fault-ds/client_delegate.js"],"names":["API","Client","Rest","DAO","_","ClientDelegate","settings","backendSrv","$q","type","url","name","searchLimit","authConfig","undefined","basicAuth","token","split","decodedToken","atob","username","password","substring","length","OnmsAuthConfig","server","OnmsServer","http","GrafanaHTTP","client","clientWithMetadata","self","getMetadata","then","metadata","apiVersion","Error","catch","e","getClientWithMetadata","alarms","filter","getAlarmDao","alarmDao","find","alarmId","get","user","escalate","clear","unacknowledge","acknowledge","action","supportedActions","indexOf","message","datasourceRequest","method","sticky","saveStickyMemo","deleteStickyMemo","journal","saveJournalMemo","deleteJournalMemo","operators","map","Operators","operator","id","label","when","searchProperties","propertyId","getProperties","properties","property","findProperty","comparators","getComparators","console","log","Comparators","EQ"],"mappings":"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","file":"client_delegate.js","sourcesContent":["import {API, Client, Rest, DAO} from '../../opennms'\nimport _ from 'lodash';\n\nexport class ClientDelegate {\n\n    constructor(settings, backendSrv, $q) {\n        this.type = settings.type;\n        this.url = settings.url;\n        this.name = settings.name;\n        this.backendSrv = backendSrv;\n        this.searchLimit = 1000;\n        this.$q = $q;\n\n        let authConfig = undefined;\n        if (settings.basicAuth) {\n          // If basic auth is configured, pass the username and password to the client\n          // This allows the datasource to work in direct mode\n          // We need the raw username and password, so we decode the token\n          const token = settings.basicAuth.split(' ')[1];\n          const decodedToken = atob(token);\n          const username = decodedToken.split(':')[0];\n          const password = decodedToken.substring(username.length+1, decodedToken.length);\n          authConfig = new API.OnmsAuthConfig(username, password);\n        }\n\n        let server = new API.OnmsServer(this.name, this.url, authConfig);\n        let http = new Rest.GrafanaHTTP(this.backendSrv, server);\n        this.client = new Client(http);\n        this.client.server = server;\n        this.clientWithMetadata = undefined;\n     }\n\n    getClientWithMetadata() {\n        if (!this.clientWithMetadata) {\n              let self = this;\n              this.clientWithMetadata = Client.getMetadata(this.client.server, this.client.http)\n                .then(function(metadata) {\n                    // Ensure the OpenNMS we are talking to is compatible\n                    if (metadata.apiVersion() !== 2) {\n                        throw new Error(\"Unsupported Version\");\n                    }\n                    self.client.server.metadata = metadata;\n                    return self.client;\n                }).catch(function(e) {\n                    // in case of error, reset the client, otherwise\n                    // the datasource may never recover\n                    self.clientWithMetadata = void 0;\n                    throw e;\n                });\n        }\n        return this.clientWithMetadata;\n      }\n\n    getAlarmDao() {\n        return this.getClientWithMetadata().then(function(client) {\n            return client.alarms();\n        });\n    }\n\n    findAlarms(filter) {\n        return this.getAlarmDao()\n            .then(function(alarmDao) {\n                return alarmDao.find(filter);\n            });\n    }\n\n    getAlarm(alarmId) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n            return alarmDao.get(alarmId);\n        });\n    }\n\n    doEscalate(alarmId, user) {\n        return this.getAlarmDao()\n            .then(alarmDao => {\n                return alarmDao.escalate(alarmId, user)\n            });\n    }\n\n    doClear(alarmId, user) {\n        return this.getAlarmDao()\n            .then(alarmDao => {\n                return alarmDao.clear(alarmId, user);\n            });\n    }\n\n    doUnack(alarmId, user) {\n        return this.getAlarmDao()\n            .then(alarmDao => {\n                return alarmDao.unacknowledge(alarmId, user);\n            });\n    }\n\n    doAck(alarmId, user) {\n        return this.getAlarmDao()\n            .then(function(alarmDao) {\n                return alarmDao.acknowledge(alarmId, user);\n            });\n    }\n\n    doTicketAction(alarmId, action) {\n        var supportedActions = [\"create\", \"update\", \"close\"];\n        if (supportedActions.indexOf(action) < 0) {\n            throw {message: \"Action '\" + action + \"' not supported.\"};\n        }\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/api/v2/alarms/' + alarmId + \"/ticket/\" + action,\n            method: 'POST',\n        });\n    }\n\n    saveSticky(alarmId, sticky, user) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.saveStickyMemo(alarmId, sticky, user);\n        });\n    }\n\n    deleteSticky(alarmId) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.deleteStickyMemo(alarmId);\n        });\n    }\n\n    saveJournal(alarmId, journal, user) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.saveJournalMemo(alarmId, journal, user);\n        });\n    }\n\n    deleteJournal(alarmId) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.deleteJournalMemo(alarmId);\n        });\n    }\n\n    findOperators() {\n        var operators = _.map(API.Operators, function(operator) {\n            return {\n                id: operator.id,\n                label: operator.label\n            }\n        });\n        return this.$q.when(operators);\n    }\n\n    getProperties() {\n        return this.getAlarmDao()\n            .then(alarmDao => {\n                return alarmDao.searchProperties();\n            });\n    }\n\n    findProperty(propertyId) {\n        return this.getProperties()\n            .then(properties => {\n                return _.find(properties, function(property) {\n                    return property.id === propertyId;\n                });\n            })\n    }\n\n    getPropertyComparators(propertyId) {\n        return this.findProperty(propertyId)\n            .then(property => {\n                if (property) {\n                    const comparators = property.type.getComparators();\n                    if (comparators && comparators.length > 0) {\n                        return comparators;\n                    }\n                }\n                console.log(\"No comparators found for property with id '\" + propertyId + \"'. Falling back to EQ.\");\n                // This may be the case when the user entered a property, which does not exist\n                // therefore fallback to EQ\n                return [ API.Comparators.EQ ];\n            });\n    }\n}"]}