{"version":3,"sources":["../../../src/datasources/fault-ds/client_delegate.js"],"names":["API","Client","Rest","DAO","Model","_","ClientDelegate","settings","backendSrv","$q","type","url","name","searchLimit","server","OnmsServer","http","GrafanaHTTP","client","clientWithMetadata","undefined","self","getMetadata","then","metadata","getClientWithMetadata","alarms","filter","getAlarmDao","alarmDao","find","alarmId","get","options","datasourceRequest","method","headers","params","data","acknowledge","action","supportedActions","indexOf","message","sticky","saveStickyMemo","deleteStickyMemo","journal","saveJournalMemo","deleteJournalMemo","limit","match","comparator","orderBy","order","label","query","sysName","results","count","totalCount","node","user","location","category","severities","map","Severities","severity","id","when","element","operators","Operators","operator","attributes","attributeName","getAttributes","attribute","comparatorMapping","comparators","console","log"],"mappings":"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","file":"client_delegate.js","sourcesContent":["import {API, Client, Rest, DAO, Model} from '../../opennms'\nimport _ from 'lodash';\n\nexport class ClientDelegate {\n\n    constructor(settings, backendSrv, $q) {\n        this.type = settings.type;\n        this.url = settings.url;\n        this.name = settings.name;\n        this.backendSrv = backendSrv;\n        this.searchLimit = 1000;\n        this.$q = $q;\n\n        let server = new API.OnmsServer(this.name, this.url);\n        let http = new Rest.GrafanaHTTP(this.backendSrv, server);\n        this.client = new Client(http);\n        this.client.server = server;\n        this.clientWithMetadata = undefined;\n     }\n\n    getClientWithMetadata() {\n        if (!this.clientWithMetadata) {\n              let self = this;\n              this.clientWithMetadata = Client.getMetadata(this.client.server, this.client.http)\n                .then(function(metadata) {\n                    self.client.server.metadata = metadata;\n                    return self.client;\n                });\n        }\n        return this.clientWithMetadata;\n      }\n\n    getAlarmDao() {\n        return this.getClientWithMetadata().then(function(client) {\n            return client.alarms();\n        });\n    }\n\n    findAlarms(filter) {\n        return this.getAlarmDao()\n            .then(function(alarmDao) {\n                return alarmDao.find(filter);\n            });\n    }\n\n    getAlarm(alarmId) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n            return alarmDao.get(alarmId);\n        });\n    }\n\n    doUpdate(alarmId, options) {\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/api/v2/alarms/' + alarmId,\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            params: options || {},\n            data: '' // empty data or Content-Type header is reset\n        });\n    }\n\n    doAck(alarmId) {\n        return this.getAlarmDao()\n            .then(function(alarmDao) {\n                return alarmDao.acknowledge(alarmId);\n            });\n    }\n\n    doTicketAction(alarmId, action) {\n        var supportedActions = [\"create\", \"update\", \"close\"];\n        if (supportedActions.indexOf(action) < 0) {\n            throw {message: \"Action '\" + action + \"' not supported.\"};\n        }\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/api/v2/alarms/' + alarmId + \"/ticket/\" + action,\n            method: 'POST',\n        });\n    }\n\n    saveSticky(alarmId, sticky) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.saveStickyMemo(alarmId, sticky);\n        });\n    }\n\n    deleteSticky(alarmId) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.deleteStickyMemo(alarmId);\n        });\n    }\n\n    saveJournal(alarmId, journal) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.saveJournalMemo(alarmId, journal);\n        });\n    }\n\n    deleteJournal(alarmId) {\n      return this.getAlarmDao()\n        .then(function(alarmDao) {\n          return alarmDao.deleteJournalMemo(alarmId);\n        });\n    }\n\n    findNodes(options) {\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n                url: self.url + '/rest/nodes',\n                method: 'GET',\n                params: {\n                    limit: options.limit || self.searchLimit,\n                    match: 'any',\n                    comparator: 'ilike',\n                    orderBy: options.orderBy || 'id',\n                    order: options.order || 'asc',\n                    label: '%' + options.query + '%',\n                    sysName: '%' + options.query + '%',\n                    'ipInterface.ipAddress': '%' + options.query + '%',\n                    'ipInterface.ipHostName': '%' + options.query + '%',\n                    'foreignId': options.query + '%' // doesn't support leading '%'\n                }\n            }).then(function (results) {\n                    return {\n                        'count': results.data.count,\n                        'totalCount': results.data.totalCount,\n                        'rows': results.data.node\n                    };\n                });\n    }\n\n    findUsers(options) {\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/rest/users',\n            method: 'GET',\n            params: {\n                limit: options.limit || self.searchLimit, // TODO MVR this is not implemented on the user rest service\n            }\n        }).then(function (results) {\n            return {\n                'count': results.data.count,\n                'totalCount': results.data.totalCount,\n                'rows': results.data.user\n            };\n        });\n    }\n\n    findLocations(query) {\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/api/v2/monitoringLocations',\n            method: 'GET',\n            params: {\n                limit: query.limit || self.searchLimit,\n            }\n        }).then(function (results) {\n            return {\n                'count': results.data.count,\n                'totalCount': results.data.totalCount,\n                'rows': results.data.location\n            };\n        });\n    }\n\n    findCategories(options) {\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/rest/categories',\n            method: 'GET',\n            params: {\n                limit: options.limit || self.searchLimit, // TODO MVR this is not implemented on the rest service\n            }\n        }).then(function (results) {\n            return {\n                'count': results.data.count,\n                'totalCount': results.data.totalCount,\n                'rows': results.data.category\n            };\n        });\n    }\n\n    findSeverities(options) {\n        var severities = _.map(Model.Severities, function(severity) {\n            return {\n                id: severity.id,\n                label: severity.label\n            };\n        });\n        return this.$q.when(severities);\n    }\n\n    findServices(options) {\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/rest/foreignSourcesConfig/services/default',\n            method: 'GET',\n            params : {\n                limit: options.limit || self.searchLimit\n            }\n        }).then(function (results) {\n            return {\n                'count': results.data.count,\n                'totalCount': results.data.totalCount,\n                'rows': results.data.element\n            };\n        });\n    }\n\n    findOperators() {\n        var operators = _.map(API.Operators, function(operator) {\n            return {\n                id: operator.id,\n                label: operator.label\n            }\n        });\n        return this.$q.when(operators);\n    }\n\n    getAttributes() {\n        let attributes = [\n            { name: \"uei\", type: \"string\" },\n            { name: \"location\", type: \"location\"},\n            { name: \"ipAddress\", type: \"ipaddress\" },\n            { name: \"service\", type: \"service\"},\n            { name: \"severity\", type: \"severity\" },\n            { name: \"alarmAckTime\", type: \"date\"}\n            // TODO MVR add more ...\n        ];\n        return attributes;\n    }\n\n    findAttribute(attributeName) {\n        return _.find(this.getAttributes(), function(attribute) {\n            return attribute.name === attributeName;\n        });\n    }\n\n    // TODO MVR we should get rid of this as well\n    getAttributeComparators(attributeName) {\n        var comparatorMapping = {\n            'uei': ['=', '!='],\n            'location': ['=', '!='],\n            'severity': ['=', '>=', '<=', '>', '<', '!='],\n            'service': ['!=', '='],\n            'ipAddress': ['=', '!='],\n            'alarmAckTime': ['=', '!=']\n        };\n        var comparators = comparatorMapping[attributeName];\n        if (!comparators) {\n            console.log(\"No comparators for attribute with name '\" + attributeName + \"' found.\");\n            return ['='];\n        }\n        return comparators;\n    }\n}"]}