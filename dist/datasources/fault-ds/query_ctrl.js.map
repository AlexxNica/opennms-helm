{"version":3,"sources":["../../../src/datasources/fault-ds/query_ctrl.js"],"names":["QueryCtrl","_","API","Mapping","UI","OpenNMSFMDatasourceQueryCtrl","$scope","$injector","$q","uiSegmentSrv","filterMapping","FilterMapping","target","filter","Filter","uiFilter","getUiFilter","rawQuery","panelCtrl","refresh","query","self","booleanList","map","clauses","clause","restriction","Query","showClearRestrictions","Controls","RemoveControl","reduce","overall","current","clear","updateControls","updateTargetFilter","getApiFilter","collapsedText","getQueryString","err","error","message","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,e,kBAAAA,S;;AAEDC,O;;AACCC,S,YAAAA,G;;AACAC,a,YAAAA,O;;AACAC,Q,OAAAA,E;;;;;;;;;;;;;;;;;;;;;8CAGKC,4B;;;AAEX,8CAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,EAA/B,EAAkCC,YAAlC,EAAiD;AAAA;;AAAA,kKACzCH,MADyC,EACjCC,SADiC;;AAE/C,gBAAKC,EAAL,GAAUA,EAAV;AACA,gBAAKF,MAAL,GAAcA,MAAd;AACA,gBAAKG,YAAL,GAAoBA,YAApB;AACA,gBAAKC,aAAL,GAAqB,IAAIP,QAAQQ,aAAZ,CAA0B,MAAKF,YAA/B,CAArB;;AAEA;AACA,gBAAKG,MAAL,CAAYC,MAAZ,GAAqB,MAAKD,MAAL,CAAYC,MAAZ,IAAsB,IAAIX,IAAIY,MAAR,EAA3C;AACA,gBAAKC,QAAL,GAAgB,MAAKL,aAAL,CAAmBM,WAAnB,CAA+B,MAAKJ,MAAL,CAAYC,MAA3C,CAAhB;AAT+C;AAUhD;;;;6CAEkB;AACjB,iBAAKD,MAAL,CAAYK,QAAZ,GAAuB,CAAC,KAAKL,MAAL,CAAYK,QAApC;AACD;;;6CAEkB;AACjB,iBAAKC,SAAL,CAAeC,OAAf,GADiB,CACS;AAC3B;;;kDAEoD;AAAA,gBAA7BC,KAA6B,uEAArB,KAAKL,QAAL,CAAcK,KAAO;;AACjD,gBAAMC,OAAO,IAAb;AACA,gBAAMC,cAAcrB,EAAEsB,GAAF,CAAMH,MAAMI,OAAZ,EAAqB,kBAAU;AACjD,kBAAIC,OAAOC,WAAP,YAA8BtB,GAAGuB,KAArC,EAA4C;AAC1C,uBAAON,KAAKO,qBAAL,CAA2BH,OAAOC,WAAlC,CAAP;AACD;AACD,qBAAO,IAAItB,GAAGyB,QAAH,CAAYC,aAAhB,GAAgCjB,MAAhC,CAAuCO,KAAvC,EAA8CK,MAA9C,CAAP;AACD,aALmB,CAApB;;AAOA,mBAAOxB,EAAE8B,MAAF,CAAST,WAAT,EAAsB,UAACU,OAAD,EAAUC,OAAV,EAAsB;AACjD,qBAAOD,WAAWC,OAAlB;AACD,aAFM,EAEJ,KAFI,CAAP;AAID;;;8CAEmB;AAClB,iBAAKlB,QAAL,CAAcmB,KAAd;AACA,iBAAKnB,QAAL,CAAcoB,cAAd;AACA,iBAAKC,kBAAL;AACD;;;+CAEkB;AACjB,iBAAKxB,MAAL,CAAYC,MAAZ,GAAqB,KAAKH,aAAL,CAAmB2B,YAAnB,CAAgC,KAAKtB,QAArC,CAArB;AACA,iBAAKG,SAAL,CAAeC,OAAf;AACH;;;6CAEoB;AACjB,gBAAImB,gBAAgB,KAAKvB,QAAL,CAAcwB,cAAd,EAApB;AACA,mBAAOD,aAAP;AACD;;;2CAEcE,G,EAAK;AAClB,iBAAKC,KAAL,GAAaD,IAAIE,OAAJ,IAAe,8BAA5B;AACA,mBAAO,EAAP;AACH;;;;QAxD+C1C,S;;;;AA2DlDK,mCAA6BsC,WAA7B,GAA2C,iDAA3C","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\nimport _ from 'lodash';\nimport {API} from '../../opennms';\nimport {Mapping} from './Mapping';\nimport {UI} from './UI';\nimport './query-directive'\n\nexport class OpenNMSFMDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, $q,uiSegmentSrv)  {\n    super($scope, $injector);\n    this.$q = $q;\n    this.$scope = $scope;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.filterMapping = new Mapping.FilterMapping(this.uiSegmentSrv);\n\n    // define and set up model\n    this.target.filter = this.target.filter || new API.Filter();\n    this.uiFilter = this.filterMapping.getUiFilter(this.target.filter);\n  }\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n    showClearRestrictions(query = this.uiFilter.query) {\n      const self = this;\n      const booleanList = _.map(query.clauses, clause => {\n        if (clause.restriction instanceof UI.Query) {\n          return self.showClearRestrictions(clause.restriction);\n        }\n        return new UI.Controls.RemoveControl().filter(query, clause);\n      });\n\n      return _.reduce(booleanList, (overall, current) => {\n        return overall || current;\n      }, false);\n\n    }\n\n    clearRestrictions() {\n      this.uiFilter.clear();\n      this.uiFilter.updateControls();\n      this.updateTargetFilter();\n    }\n\n  updateTargetFilter() {\n      this.target.filter = this.filterMapping.getApiFilter(this.uiFilter);\n      this.panelCtrl.refresh();\n  }\n\n    getCollapsedText() {\n      var collapsedText = this.uiFilter.getQueryString();\n      return collapsedText;\n    }\n\n  handleQueryError(err) {\n      this.error = err.message || 'Failed to issue metric query';\n      return [];\n  }\n}\n\nOpenNMSFMDatasourceQueryCtrl.templateUrl = 'datasources/fault-ds/partials/query.editor.html';\n\n"]}