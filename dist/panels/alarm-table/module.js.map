{"version":3,"sources":["../../../src/panels/alarm-table/module.js"],"names":["_","$","MetricsPanelCtrl","loadPluginCss","transformDataToTable","tablePanelEditor","columnOptionsTab","TableRenderer","coreModule","alarmDetailsAsDirective","memoEditorAsDirective","dark","light","AlarmTableCtrl","$scope","$injector","$rootScope","annotationsSrv","$sanitize","$compile","datasourceSrv","timeSrv","panelDefaults","targets","transform","pageSize","showHeader","styles","type","pattern","dateFormat","sanitize","unit","decimals","alias","colors","colorMode","thresholds","columns","text","scroll","fontSize","sort","col","desc","severity","severityIcons","actions","pageIndex","panel","fields","defaults","events","on","onDataReceived","bind","onDataError","onInitEditMode","addEditorTab","datasource","setTimeQueryStart","getAnnotations","dashboard","range","then","data","annotations","err","dataRaw","render","dataList","length","table","renderer","isTimezoneUtc","colIndex","scope","elem","attrs","ctrl","pageCount","formaters","getTableHeight","panelHeight","height","appendTableRows","tbodyElem","setTable","empty","html","contents","switchPage","e","el","currentTarget","parseInt","renderPanel","appendPaginationControls","footerElem","Math","ceil","rows","startPage","max","endPage","min","paginationList","i","activeClass","pageLinkElem","append","panelElem","parents","rootElem","find","css","addClass","unbindDestroy","$on","off","renderData","renderingCompleted","source","alarmId","alarm","each","matchedRow","row","meta","id","undefined","findAlarm","appEvent","newScope","$new","templateHtml","action","self","get","ds","indexOf","message","name","error","refreshDashboard","catch","performAlarmActionOnDatasource","templateUrl","directive"],"mappings":"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","file":"module.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport {transformDataToTable} from './transformers';\nimport {tablePanelEditor} from './editor';\nimport {columnOptionsTab} from './column_options';\nimport {TableRenderer} from './renderer';\nimport coreModule from 'app/core/core_module';\nimport {alarmDetailsAsDirective} from './alarm_details';\nimport {memoEditorAsDirective} from \"./memo_editor\"\nimport {loadPluginCss} from 'app/plugins/sdk';\n\nloadPluginCss({\n  dark: 'plugins/opennms-helm/panels/alarm-table/css/table.dark.css',\n  light: 'plugins/opennms-helm/panels/alarm-table/css/table.light.css'\n});\n\nclass AlarmTableCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $rootScope, annotationsSrv, $sanitize, $compile, datasourceSrv, timeSrv) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n    this.annotationsSrv = annotationsSrv;\n    this.$sanitize = $sanitize;\n    this.$compile = $compile;\n    this.datasourceSrv = datasourceSrv;\n    this.timeSrv = timeSrv;\n\n    let panelDefaults = {\n      targets: [{}],\n      transform: 'table',\n      pageSize: 5,\n      showHeader: true,\n      styles: [\n        {\n          type: 'date',\n          pattern: '/.*Time/', // Render all \"* Time\" columns as date, e.g. \"Last Event Time\", \"First Event Time\", etc.\n          dateFormat: 'YYYY-MM-DD HH:mm:ss',\n        },\n        {\n          type: 'date',\n          pattern: 'Suppressed Until',\n          dateFormat: 'YYYY-MM-DD HH:mm:ss',\n        },\n        {\n          type: 'string',\n          pattern: '/.*ID/', // Render all \"* ID\" columns as string, otherwise ID 1000 appears as 1.0 K\n        },\n        {\n          type: 'string',\n          pattern: 'Description',\n          sanitize: true\n        },\n        {\n          unit: 'short',\n          type: 'number',\n          decimals: 0,\n          pattern: 'Count',\n        },\n        {\n          unit: 'short',\n          type: 'number',\n          alias: '',\n          decimals: 2,\n          colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n          colorMode: null,\n          pattern: '/.*/',\n          thresholds: [],\n        }\n      ],\n      columns: [\n          {text: 'UEI'},\n          {text: 'Log Message'},\n          {text: 'Node Label'},\n          {text: 'Count'},\n          {text: 'Last Event Time',}],\n      scroll: false, // disable scrolling as the actions popup is not working properly otherwise\n      fontSize: '100%',\n      sort: {col: 0, desc: true},\n      severity: true,\n      severityIcons: true,\n      actions: true\n    };\n\n    this.pageIndex = 0;\n\n    if (this.panel.styles === void 0) {\n      this.panel.styles = this.panel.columns;\n      this.panel.columns = this.panel.fields;\n      delete this.panel.columns;\n      delete this.panel.fields;\n    }\n\n    _.defaults(this.panel, panelDefaults);\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n\n  onInitEditMode() {\n    this.addEditorTab('Options', tablePanelEditor, 2);\n    this.addEditorTab('Column Styles', columnOptionsTab, 3);\n  }\n\n  issueQueries(datasource) {\n    this.pageIndex = 0;\n\n    if (this.panel.transform === 'annotations') {\n      this.setTimeQueryStart();\n      return this.annotationsSrv.getAnnotations({dashboard: this.dashboard, panel: this.panel, range: this.range})\n        .then(annotations => {\n          return {data: annotations};\n        });\n    }\n\n    return super.issueQueries(datasource);\n  }\n\n  onDataError(err) {\n    this.dataRaw = [];\n    this.render();\n  }\n\n  onDataReceived(dataList) {\n    this.dataRaw = dataList;\n    this.pageIndex = 0;\n\n    // automatically correct transform mode based on data\n    if (this.dataRaw && this.dataRaw.length) {\n      if (this.dataRaw[0].type === 'table') {\n        this.panel.transform = 'table';\n      } else {\n        if (this.dataRaw[0].type === 'docs') {\n          this.panel.transform = 'json';\n        } else {\n          if (this.panel.transform === 'table' || this.panel.transform === 'json') {\n            this.panel.transform = 'timeseries_to_rows';\n          }\n        }\n      }\n    }\n\n    this.render();\n  }\n\n  render() {\n    this.table = transformDataToTable(this.dataRaw, this.panel);\n    this.table.sort(this.panel.sort);\n\n    this.renderer = new TableRenderer(this.panel, this.table, this.dashboard.isTimezoneUtc(), this.$sanitize);\n\n    return super.render(this.table);\n  }\n\n  toggleColumnSort(col, colIndex) {\n    // remove sort flag from current column\n    if (this.table.columns[this.panel.sort.col]) {\n      this.table.columns[this.panel.sort.col].sort = false;\n    }\n\n    if (this.panel.sort.col === colIndex) {\n      if (this.panel.sort.desc) {\n        this.panel.sort.desc = false;\n      } else {\n        this.panel.sort.col = null;\n      }\n    } else {\n      this.panel.sort.col = colIndex;\n      this.panel.sort.desc = true;\n    }\n    this.render();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    let data;\n    let panel = ctrl.panel;\n    let pageCount = 0;\n    let formaters = [];\n\n    function getTableHeight() {\n      let panelHeight = ctrl.height;\n\n      if (pageCount > 1) {\n        panelHeight -= 26;\n      }\n\n      return (panelHeight - 31) + 'px';\n    }\n\n    function appendTableRows(tbodyElem) {\n      ctrl.renderer.setTable(data);\n      tbodyElem.empty();\n      tbodyElem.html(ctrl.renderer.render(ctrl.pageIndex));\n      // Compile the HTML generated by the renderer - this is required for the actions dropdown to function\n      ctrl.$compile(tbodyElem.contents())(scope);\n    }\n\n    function switchPage(e) {\n      let el = $(e.currentTarget);\n      ctrl.pageIndex = (parseInt(el.text(), 10) - 1);\n      renderPanel();\n    }\n\n    function appendPaginationControls(footerElem) {\n      footerElem.empty();\n\n      let pageSize = panel.pageSize || 100;\n      pageCount = Math.ceil(data.rows.length / pageSize);\n      if (pageCount === 1) {\n        return;\n      }\n\n      let startPage = Math.max(ctrl.pageIndex - 3, 0);\n      let endPage = Math.min(pageCount, startPage + 9);\n\n      let paginationList = $('<ul></ul>');\n\n      for (let i = startPage; i < endPage; i++) {\n        let activeClass = i === ctrl.pageIndex ? 'active' : '';\n        let pageLinkElem = $('<li><a class=\"table-panel-page-link pointer ' + activeClass + '\">' + (i + 1) + '</a></li>');\n        paginationList.append(pageLinkElem);\n      }\n\n      footerElem.append(paginationList);\n    }\n\n    function renderPanel() {\n      let panelElem = elem.parents('.panel');\n      let rootElem = elem.find('.table-panel-scroll');\n      let tbodyElem = elem.find('tbody');\n      let footerElem = elem.find('.table-panel-footer');\n\n      elem.css({'font-size': panel.fontSize});\n      panelElem.addClass('table-panel-wrapper');\n\n      appendTableRows(tbodyElem);\n      appendPaginationControls(footerElem);\n\n      rootElem.css({'max-height': panel.scroll ? getTableHeight() : ''});\n    }\n\n    elem.on('click', '.table-panel-page-link', switchPage);\n\n    let unbindDestroy = scope.$on('$destroy', function () {\n      elem.off('click', '.table-panel-page-link');\n      unbindDestroy();\n    });\n\n    ctrl.events.on('render', function (renderData) {\n      data = renderData || data;\n      if (data) {\n        renderPanel();\n      }\n      ctrl.renderingCompleted();\n    });\n  }\n\n  // Alarm related actions\n\n  findAlarm(source, alarmId) {\n    let alarm;\n    _.each(this.dataRaw, table => {\n      let matchedRow = _.find(table.rows, row => {\n        return row.meta.source === source && row.meta.alarm.id === alarmId;\n      });\n      if (matchedRow !== undefined) {\n        alarm = matchedRow.meta.alarm;\n      }\n    });\n    return alarm;\n  }\n\n  alarmDetails(source, alarmId) {\n    let alarm = this.findAlarm(source, alarmId);\n    if (alarm === undefined) {\n      this.$rootScope.appEvent('alert-error', ['Unable to find matching alarm', '']);\n      return;\n    }\n\n    let newScope = this.$rootScope.$new();\n    newScope.alarm = alarm;\n    newScope.source = source;\n    this.$rootScope.appEvent('show-modal', {\n      templateHtml: '<alarm-details-as-modal dismiss=\"dismiss()\"></alarm-details-as-modal>',\n      scope: newScope\n    });\n  }\n\n  performAlarmActionOnDatasource(source, action, alarmId) {\n    let self = this;\n    this.datasourceSrv.get(source).then(ds => {\n      if (ds.type && ds.type.indexOf(\"fm-ds\") < 0) {\n        throw {message: 'Only OpenNMS datasources are supported'};\n      } else {\n        if (!ds[action]) {\n          throw {message: 'Action ' + action + ' not implemented by datasource ' + ds.name + \" of type \" + ds.type};\n        }\n        return ds[action](alarmId);\n      }\n    }).then(() => {\n      // Action was successful, remove any previous error\n      delete self.error;\n      // Refresh the dashboard\n      self.timeSrv.refreshDashboard();\n    }).catch(err => {\n      self.error = err.message || \"Request Error\";\n    });\n  }\n\n  acknowledgeAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'acknowledgeAlarm', alarmId);\n  }\n\n  unacknowledgeAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'unacknowledgeAlarm', alarmId);\n  }\n\n  clearAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'clearAlarm', alarmId);\n  }\n\n  escalateAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'escalateAlarm', alarmId);\n  }\n\n  createTicketForAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'createTicketForAlarm', alarmId);\n  }\n\n  updateTicketForAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'updateTicketForAlarm', alarmId);\n  }\n\n  closeTicketForAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'closeTicketForAlarm', alarmId);\n  }\n}\n\nAlarmTableCtrl.templateUrl = 'panels/alarm-table/module.html';\n\nexport {\n  AlarmTableCtrl,\n  AlarmTableCtrl as PanelCtrl\n};\n\ncoreModule.directive('alarmDetailsAsModal',  alarmDetailsAsDirective);\ncoreModule.directive('memoEditor',  memoEditorAsDirective);\n"]}