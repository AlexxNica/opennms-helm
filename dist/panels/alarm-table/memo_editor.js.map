{"version":3,"sources":["../../../src/panels/alarm-table/memo_editor.js"],"names":["memoEditorAsDirective","restrict","templateUrl","controller","MemoEditorCtrl","scope","alarm","source","type","$scope","datasourceSrv","alarmId","id","setupWithAlarm","self","$watch","memoChanged","didMemoChange","saveMemo","actionInProgress","getDatasource","then","ds","saveSticky","memoBody","saveJournal","refresh","catch","deleteMemo","deleteSticky","deleteJournal","get","indexOf","message","getAlarm","memo","body","originalMemoBody"],"mappings":"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","file":"memo_editor.js","sourcesContent":["export class MemoEditorCtrl {\n  /** @ngInject */\n  constructor($scope, datasourceSrv) {\n    this.$scope = $scope;\n    this.datasourceSrv = datasourceSrv;\n\n    // Require a valid type\n    if ($scope.type !== 'journal' && $scope.type !== 'sticky') {\n      throw \"Unsupported memo type\" + $scope.type;\n    }\n\n    // Save the id, this won't change during the lifetime of this controller\n    $scope.alarmId = $scope.alarm.id;\n    this.setupWithAlarm($scope.alarm);\n\n    // Register a listener for the memo body so that we can enable the Save button\n    // when the form is 'dirty'\n    let self = this;\n    $scope.$watch('memoBody', function() {\n      $scope.memoChanged = self.didMemoChange();\n    });\n\n    $scope.saveMemo = function() {\n      $scope.actionInProgress = true;\n      self.getDatasource().then(ds => {\n        if ($scope.type === 'sticky') {\n          return ds.saveSticky($scope.alarm.id, $scope.memoBody);\n        } else {\n          return ds.saveJournal($scope.alarm.id, $scope.memoBody);\n        }\n      })\n      .then(res => {\n        $scope.actionInProgress = false;\n        self.refresh();\n      })\n      .catch(err => {\n        $scope.actionInProgress = false;\n        self.refresh();\n      })\n    };\n\n    $scope.deleteMemo = function() {\n      $scope.actionInProgress = true;\n      self.getDatasource().then(ds => {\n        if ($scope.type === 'sticky') {\n          return ds.deleteSticky($scope.alarm.id);\n        } else {\n          return ds.deleteJournal($scope.alarm.id);\n        }\n      })\n      .then(res => {\n        $scope.actionInProgress = false;\n        self.refresh();\n      })\n      .catch(err => {\n        $scope.actionInProgress = false;\n        self.refresh();\n      });\n    };\n  }\n\n  getDatasource() {\n    return this.datasourceSrv.get(this.$scope.source).then(ds => {\n      if (ds.type && ds.type.indexOf(\"fm-ds\") < 0) {\n        throw {message: 'Only OpenNMS datasources are supported'};\n      } else {\n        return ds;\n      }\n    });\n  };\n\n  refresh() {\n    let self = this;\n    this.getDatasource().then(ds => {return ds.getAlarm(self.$scope.alarmId)})\n      .then(alarm => {\n        self.setupWithAlarm(alarm)\n      });\n  }\n\n  setupWithAlarm(alarm) {\n    this.$scope.alarm = alarm;\n    this.$scope.memo = this.$scope.alarm[this.$scope.type];\n    this.$scope.memoBody = this.$scope.memo ? this.$scope.memo.body : null;\n    this.$scope.memoChanged = false;\n  }\n\n  didMemoChange() {\n    let originalMemoBody = null;\n    if (this.$scope.memo) {\n      originalMemoBody = this.$scope.memo.body;\n    }\n    return originalMemoBody !== this.$scope.memoBody;\n  }\n}\n\n/** @ngInject */\nexport function memoEditorAsDirective() {\n  'use strict';\n  return {\n    restrict: 'E',\n    templateUrl: 'public/plugins/opennms-helm-app/panels/alarm-table/memo_editor.html',\n    controller: MemoEditorCtrl,\n    scope: {\n      alarm: '=',\n      source: '=',\n      type: '@',\n    }\n  };\n}\n"]}