{"version":3,"sources":["../../../../../src/datasources/fault-ds/ui/Controls.js"],"names":["Control","title","icon","query","clause","Error","RemoveControl","removeClause","root","getSize","parentQuery","undefined","parentClause","find","clauses","restriction","length","asRestrictionDTO","AddControl","index","indexOf","createNewEmptyClause","AddNestedControl","createNewEmptyNestedClause"],"mappings":";;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;;;;;AAGA;;;IAGMA,O;AAEF,qBAAYC,KAAZ,EAAmBC,IAAnB,EAAyB;AAAA;;AACrB,aAAKD,KAAL,GAAaA,KAAb;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACH;;;;+BAEMC,K,EAAOC,M,EAAQ;AAClB,kBAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;AACH;;;+BAEMF,K,EAAOC,M,EAAQ;AAClB,kBAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;AACH;;;;;;AAGL;;;;;IAGaC,a,WAAAA,a;;;AACT,6BAAc;AAAA;;AAAA,6HACJ,eADI,EACa,UADb;AAEb;;;;+BAEMH,K,EAAOC,M,EAAQ;AAClBD,kBAAMI,YAAN,CAAmBH,MAAnB;AACA,gBAAID,MAAMK,IAAN,KAAe,KAAf,IAAwBL,MAAMM,OAAN,OAAoB,CAA5C,IAAiDN,MAAMO,WAAN,KAAsBC,SAA3E,EAAsF;AAClF,oBAAMC,eAAe,iBAAEC,IAAF,CAAOV,MAAMO,WAAN,CAAkBI,OAAzB,EAAkC,kBAAU;AAC7D,2BAAOV,OAAOW,WAAP,IAAsBZ,KAA7B;AACH,iBAFoB,CAArB;AAGAA,sBAAMO,WAAN,CAAkBH,YAAlB,CAA+BK,YAA/B;AACH;AACJ;;;+BAEMT,K,EAAOC,M,EAAQ;AAClB,gBAAIA,OAAOW,WAAP,wBAAJ,EAAyC;AACrC,uBAAO,KAAP;AACH;AACD,gBAAIZ,MAAMK,IAAN,KAAe,IAAnB,EAAyB;AACrB,uBAAOL,MAAMW,OAAN,CAAcE,MAAd,GAAuB,CAAvB,IAA4BZ,OAAOW,WAAP,CAAmBE,gBAAnB,OAA0C,IAA7E;AACH;AACD,mBAAO,IAAP;AACH;;;;EAvB8BjB,O;;AA0BnC;;;;;IAGakB,U,WAAAA,U;;;AAET,0BAAc;AAAA;;AAAA,uHACJ,gBADI,EACc,SADd;AAEb;;;;+BAEMf,K,EAAOC,M,EAAQ;AAClB,gBAAMe,QAAQhB,MAAMW,OAAN,CAAcM,OAAd,CAAsBhB,MAAtB,IAAgC,CAA9C;AACAD,kBAAMkB,oBAAN,CAA2BF,KAA3B;AACH;;;+BAEMhB,K,EAAOC,M,EAAQ;AAClB,gBAAIA,OAAOW,WAAP,wBAAJ,EAAyC;AACrC,uBAAO,KAAP;AACH;AACD,mBAAO,IAAP;AACH;;;;EAhB2Bf,O;;AAmBhC;;;;;IAGasB,gB,WAAAA,gB;;;AACT,gCAAc;AAAA;;AAAA,mIACJ,mBADI,EACiB,SADjB;AAEb;;;;+BAEMnB,K,EAAOC,M,EAAQ;AAClB,gBAAMe,QAAQhB,MAAMW,OAAN,CAAcM,OAAd,CAAsBhB,MAAtB,IAAgC,CAA9C;AACAD,kBAAMoB,0BAAN,CAAiCJ,KAAjC;AACH;;;+BAEMhB,K,EAAOC,M,EAAQ;AAClB,mBAAOD,MAAMK,IAAN,KAAe,IAAf,IAAuB,EAAEJ,OAAOW,WAAP,wBAAF,CAA9B;AACH;;;;EAZiCf,O","file":"Controls.js","sourcesContent":["import _ from 'lodash';\nimport {Restriction} from './Restriction';\nimport {Query} from './Query';\n\n\n/**\n * Parent class of all controls.\n */\nclass Control {\n\n    constructor(title, icon) {\n        this.title = title;\n        this.icon = icon;\n    }\n\n    action(query, clause) {\n        throw new Error(\"Method action(...) not implemented\");\n    }\n\n    filter(query, clause) {\n        throw new Error(\"Method filter(...) not implemented\");\n    }\n}\n\n/**\n * Control to remove the current clause from the current query.\n */\nexport class RemoveControl extends Control {\n    constructor() {\n        super(\"Remove clause\", 'fa-minus');\n    }\n\n    action(query, clause) {\n        query.removeClause(clause);\n        if (query.root === false && query.getSize() === 0 && query.parentQuery !== undefined) {\n            const parentClause = _.find(query.parentQuery.clauses, clause => {\n                return clause.restriction == query\n            });\n            query.parentQuery.removeClause(parentClause);\n        }\n    }\n\n    filter(query, clause) {\n        if (clause.restriction instanceof Query) {\n            return false;\n        }\n        if (query.root === true) {\n            return query.clauses.length > 1 || clause.restriction.asRestrictionDTO() !== null;\n        }\n        return true;\n    }\n}\n\n/**\n * Control to add a new clause to the current query.\n */\nexport class AddControl extends Control {\n\n    constructor() {\n        super('Add new clause', 'fa-plus');\n    }\n\n    action(query, clause) {\n        const index = query.clauses.indexOf(clause) + 1;\n        query.createNewEmptyClause(index);\n    }\n\n    filter(query, clause) {\n        if (clause.restriction instanceof Query) {\n            return false;\n        }\n        return true;\n    }\n}\n\n/**\n * Control to add a new nested clause to the current query.\n */\nexport class AddNestedControl extends Control {\n    constructor() {\n        super('Add nested clause', 'fa-file', );\n    }\n\n    action(query, clause) {\n        const index = query.clauses.indexOf(clause) + 1;\n        query.createNewEmptyNestedClause(index);\n    }\n\n    filter(query, clause) {\n        return query.root === true && !(clause.restriction instanceof Query);\n    }\n}"]}