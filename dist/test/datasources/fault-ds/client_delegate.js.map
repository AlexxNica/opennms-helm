{"version":3,"sources":["../../../../src/datasources/fault-ds/client_delegate.js"],"names":["ClientDelegate","settings","backendSrv","$q","type","url","name","searchLimit","server","OnmsServer","http","GrafanaHTTP","client","clientWithMetadata","undefined","self","getMetadata","then","metadata","getClientWithMetadata","alarms","filter","getAlarmDao","alarmDao","theFilter","FilterInitializer","createFilter","find","alarmId","options","datasourceRequest","method","headers","params","data","action","supportedActions","indexOf","message","limit","match","comparator","orderBy","order","label","query","sysName","results","count","totalCount","node","user","location","category","severities","map","Severities","severity","id","when","element","operators","Operators","operator","attributes","attributeName","getAttributes","attribute","comparatorMapping","comparators","console","log","newFilter","Filter","clauses","createNestedRestriction","clause","restriction","nestedRestriction","Clause","createRestriction","newNestedRestriction","NestedRestriction","each","withClause","createClause","Comparators","Restriction","value"],"mappings":"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","file":"client_delegate.js","sourcesContent":["import {API, Client, Rest, DAO, Model} from '../../opennms'\nimport _ from 'lodash';\n\nexport class ClientDelegate {\n\n    constructor(settings, backendSrv, $q) {\n        this.type = settings.type;\n        this.url = settings.url;\n        this.name = settings.name;\n        this.backendSrv = backendSrv;\n        this.searchLimit = 1000;\n        this.$q = $q;\n\n        let server = new API.OnmsServer(this.name, this.url);\n        let http = new Rest.GrafanaHTTP(this.backendSrv, server);\n        this.client = new Client(http);\n        this.client.server = server;\n        this.clientWithMetadata = undefined;\n     }\n\n    getClientWithMetadata() {\n        if (!this.clientWithMetadata) {\n              let self = this;\n              this.clientWithMetadata = Client.getMetadata(this.client.server, this.client.http)\n                .then(function(metadata) {\n                    self.client.server.metadata = metadata;\n                    return self.client;\n                });\n        }\n        return this.clientWithMetadata;\n      }\n\n    getAlarmDao() {\n        return this.getClientWithMetadata().then(function(client) {\n            return client.alarms();\n        });\n    }\n\n    findAlarms(filter) {\n        return this.getAlarmDao()\n            .then(function(alarmDao) {\n                var theFilter = new FilterInitializer().createFilter(filter);\n                return alarmDao.find(theFilter);\n            });\n    }\n\n    doUpdate(alarmId, options) {\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/api/v2/alarms/' + alarmId,\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            params: options || {},\n            data: '' // empty data or Content-Type header is reset\n        });\n    }\n\n    doTicketAction(alarmId, action) {\n        var supportedActions = [\"create\", \"update\", \"close\"];\n        if (supportedActions.indexOf(action) < 0) {\n            throw {message: \"Action '\" + action + \"' not supported.\"};\n        }\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/api/v2/alarms/' + alarmId + \"/ticket/\" + action,\n            method: 'POST',\n        });\n    }\n\n    findNodes(options) {\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n                url: self.url + '/rest/nodes',\n                method: 'GET',\n                params: {\n                    limit: options.limit || self.searchLimit,\n                    match: 'any',\n                    comparator: 'ilike',\n                    orderBy: options.orderBy || 'id',\n                    order: options.order || 'asc',\n                    label: '%' + options.query + '%',\n                    sysName: '%' + options.query + '%',\n                    'ipInterface.ipAddress': '%' + options.query + '%',\n                    'ipInterface.ipHostName': '%' + options.query + '%',\n                    'foreignId': options.query + '%' // doesn't support leading '%'\n                }\n            }).then(function (results) {\n                    return {\n                        'count': results.data.count,\n                        'totalCount': results.data.totalCount,\n                        'rows': results.data.node\n                    };\n                });\n    }\n\n    findUsers(options) {\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/rest/users',\n            method: 'GET',\n            params: {\n                limit: options.limit || self.searchLimit, // TODO MVR this is not implemented on the user rest service\n            }\n        }).then(function (results) {\n            return {\n                'count': results.data.count,\n                'totalCount': results.data.totalCount,\n                'rows': results.data.user\n            };\n        });\n    }\n\n    findLocations(query) {\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/api/v2/monitoringLocations',\n            method: 'GET',\n            params: {\n                limit: query.limit || self.searchLimit,\n            }\n        }).then(function (results) {\n            return {\n                'count': results.data.count,\n                'totalCount': results.data.totalCount,\n                'rows': results.data.location\n            };\n        });\n    }\n\n    findCategories(options) {\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/rest/categories',\n            method: 'GET',\n            params: {\n                limit: options.limit || self.searchLimit, // TODO MVR this is not implemented on the rest service\n            }\n        }).then(function (results) {\n            return {\n                'count': results.data.count,\n                'totalCount': results.data.totalCount,\n                'rows': results.data.category\n            };\n        });\n    }\n\n    findSeverities(options) {\n        var severities = _.map(Model.Severities, function(severity) {\n            return {\n                id: severity.id,\n                label: severity.label\n            };\n        });\n        return this.$q.when(severities);\n    }\n\n    findServices(options) {\n        var self = this;\n        return this.backendSrv.datasourceRequest({\n            url: self.url + '/rest/foreignSourcesConfig/services/default',\n            method: 'GET',\n            params : {\n                limit: options.limit || self.searchLimit\n            }\n        }).then(function (results) {\n            return {\n                'count': results.data.count,\n                'totalCount': results.data.totalCount,\n                'rows': results.data.element\n            };\n        });\n    }\n\n    findOperators() {\n        var operators = _.map(API.Operators, function(operator) {\n            return {\n                id: operator.id,\n                label: operator.label\n            }\n        });\n        return this.$q.when(operators);\n    }\n\n    getAttributes() {\n        let attributes = [\n            { name: \"uei\", type: \"string\" },\n            { name: \"location\", type: \"location\"},\n            { name: \"ipAddress\", type: \"ipaddress\" },\n            { name: \"service\", type: \"service\"},\n            { name: \"severity\", type: \"severity\" },\n            { name: \"alarmAckTime\", type: \"date\"}\n            // TODO MVR add more ...\n        ];\n        return attributes;\n    }\n\n    findAttribute(attributeName) {\n        return _.find(this.getAttributes(), function(attribute) {\n            return attribute.name === attributeName;\n        });\n    }\n\n    // TODO MVR we should get rid of this as well\n    getAttributeComparators(attributeName) {\n        var comparatorMapping = {\n            'uei': ['=', '!='],\n            'location': ['=', '!='],\n            'severity': ['=', '>=', '<=', '>', '<', '!='],\n            'service': ['!=', '='],\n            'ipAddress': ['=', '!='],\n            'alarmAckTime': ['=', '!=']\n        };\n        var comparators = comparatorMapping[attributeName];\n        if (!comparators) {\n            console.log(\"No comparators for attribute with name '\" + attributeName + \"' found.\");\n            return ['='];\n        }\n        return comparators;\n    }\n}\n\n/**\n * The filter may be reloaded from a persisted state.\n * The internal opennms.js API requires a concrete implementation of Comparators or Operators in order to work.\n * As the object was persisted, the references DO NOT MATCH. In order to make them match, we just rebuild the filter.\n */\nexport class FilterInitializer {\n    createFilter(filter) {\n        const newFilter = new API.Filter();\n        newFilter.limit = filter.limit;\n        newFilter.clauses = this.createNestedRestriction(filter).clauses;\n        return newFilter;\n    }\n\n    createClause(clause) {\n        const operator = _.find(API.Operators, function(operator) {\n            return operator.label === clause.operator.label;\n        });\n\n        // Nested restriction\n        if (clause.restriction.clauses) {\n            const nestedRestriction = this.createNestedRestriction(clause.restriction);\n            return new API.Clause(nestedRestriction, operator);\n        } else { // Normal restriction\n            const restriction = this.createRestriction(clause.restriction);\n            return new API.Clause(restriction, operator);\n        }\n    }\n\n    createNestedRestriction(nestedRestriction) {\n        const self = this;\n        const newNestedRestriction = new API.NestedRestriction();\n        _.each(nestedRestriction.clauses, function(clause) {\n            newNestedRestriction.withClause(self.createClause(clause));\n        });\n        return newNestedRestriction;\n    }\n\n    createRestriction(restriction) {\n        const comparator = _.find(API.Comparators, function(comparator) {\n            return comparator.label === restriction.comparator.label;\n        });\n        return new API.Restriction(restriction.attribute, comparator, restriction.value);\n    }\n}"]}