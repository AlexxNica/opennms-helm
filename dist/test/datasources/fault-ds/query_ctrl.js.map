{"version":3,"sources":["../../../../src/datasources/fault-ds/query_ctrl.js"],"names":["OpenNMSFMDatasourceQueryCtrl","$scope","$injector","$q","uiSegmentSrv","featuredAttributes","filterMapping","FilterMapping","target","filter","cloneFilter","Filter","uiFilter","getUiFilter","rawQuery","panelCtrl","refresh","query","self","booleanList","map","clauses","clause","restriction","Query","showClearRestrictions","Controls","RemoveControl","reduce","overall","current","clear","updateControls","updateTargetFilter","getApiFilter","collapsedText","getQueryString","err","error","message","templateUrl"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;IAEaA,4B,WAAAA,4B;;;AAEX,wCAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,EAA/B,EAAkCC,YAAlC,EAAiD;AAAA;;AAAA,4JACzCH,MADyC,EACjCC,SADiC;;AAE/C,UAAKC,EAAL,GAAUA,EAAV;AACA,UAAKF,MAAL,GAAcA,MAAd;AACA,UAAKG,YAAL,GAAoBA,YAApB;AACA,UAAKC,kBAAL,GAA0B,IAA1B,CAL+C,CAKf;AAChC,UAAKC,aAAL,GAAqB,IAAI,iBAAQC,aAAZ,CAA0B,MAAKH,YAA/B,CAArB;;AAEA;AACA;AACA,QAAI,MAAKI,MAAL,CAAYC,MAAhB,EAAwB;AACtB,YAAKD,MAAL,CAAYC,MAAZ,GAAqB,iCAAmBC,WAAnB,CAA+B,MAAKF,MAAL,CAAYC,MAA3C,CAArB;AACD,KAFD,MAEO;AACL,YAAKD,MAAL,CAAYC,MAAZ,GAAqB,IAAI,aAAIE,MAAR,EAArB;AACD;AACD,UAAKC,QAAL,GAAgB,MAAKN,aAAL,CAAmBO,WAAnB,CAA+B,MAAKL,MAAL,CAAYC,MAA3C,CAAhB;AAf+C;AAgBhD;;;;uCAEkB;AACjB,WAAKD,MAAL,CAAYM,QAAZ,GAAuB,CAAC,KAAKN,MAAL,CAAYM,QAApC;AACD;;;uCAEkB;AACjB,WAAKC,SAAL,CAAeC,OAAf,GADiB,CACS;AAC3B;;;4CAEoD;AAAA,UAA7BC,KAA6B,uEAArB,KAAKL,QAAL,CAAcK,KAAO;;AACjD,UAAMC,OAAO,IAAb;AACA,UAAMC,cAAc,iBAAEC,GAAF,CAAMH,MAAMI,OAAZ,EAAqB,kBAAU;AACjD,YAAIC,OAAOC,WAAP,YAA8B,OAAGC,KAArC,EAA4C;AAC1C,iBAAON,KAAKO,qBAAL,CAA2BH,OAAOC,WAAlC,CAAP;AACD;AACD,eAAO,IAAI,OAAGG,QAAH,CAAYC,aAAhB,GAAgClB,MAAhC,CAAuCQ,KAAvC,EAA8CK,MAA9C,CAAP;AACD,OALmB,CAApB;;AAOA,aAAO,iBAAEM,MAAF,CAAST,WAAT,EAAsB,UAACU,OAAD,EAAUC,OAAV,EAAsB;AACjD,eAAOD,WAAWC,OAAlB;AACD,OAFM,EAEJ,KAFI,CAAP;AAID;;;wCAEmB;AAClB,WAAKlB,QAAL,CAAcmB,KAAd;AACA,WAAKnB,QAAL,CAAcoB,cAAd;AACA,WAAKC,kBAAL;AACD;;;yCAEkB;AACjB,WAAKzB,MAAL,CAAYC,MAAZ,GAAqB,KAAKH,aAAL,CAAmB4B,YAAnB,CAAgC,KAAKtB,QAArC,CAArB;AACA,WAAKG,SAAL,CAAeC,OAAf;AACH;;;uCAEoB;AACjB,UAAImB,gBAAgB,KAAKvB,QAAL,CAAcwB,cAAd,EAApB;AACA,aAAOD,aAAP;AACD;;;qCAEcE,G,EAAK;AAClB,WAAKC,KAAL,GAAaD,IAAIE,OAAJ,IAAe,8BAA5B;AACA,aAAO,EAAP;AACH;;;;;;AAGHvC,6BAA6BwC,WAA7B,GAA2C,iDAA3C","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\nimport _ from 'lodash';\nimport {API} from '../../opennms';\nimport {Mapping} from './Mapping';\nimport {UI} from './UI';\nimport './query-directive'\nimport {FilterCloner} from \"./FilterCloner\";\n\nexport class OpenNMSFMDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, $q,uiSegmentSrv)  {\n    super($scope, $injector);\n    this.$q = $q;\n    this.$scope = $scope;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.featuredAttributes = true; // limits the selection to the featured attributes\n    this.filterMapping = new Mapping.FilterMapping(this.uiSegmentSrv);\n\n    // The target filter may be de-serialized from persistence.\n    // In order to re-initialize it properly, the filter is cloned.\n    if (this.target.filter) {\n      this.target.filter = new FilterCloner().cloneFilter(this.target.filter);\n    } else {\n      this.target.filter = new API.Filter();\n    }\n    this.uiFilter = this.filterMapping.getUiFilter(this.target.filter);\n  }\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n    showClearRestrictions(query = this.uiFilter.query) {\n      const self = this;\n      const booleanList = _.map(query.clauses, clause => {\n        if (clause.restriction instanceof UI.Query) {\n          return self.showClearRestrictions(clause.restriction);\n        }\n        return new UI.Controls.RemoveControl().filter(query, clause);\n      });\n\n      return _.reduce(booleanList, (overall, current) => {\n        return overall || current;\n      }, false);\n\n    }\n\n    clearRestrictions() {\n      this.uiFilter.clear();\n      this.uiFilter.updateControls();\n      this.updateTargetFilter();\n    }\n\n  updateTargetFilter() {\n      this.target.filter = this.filterMapping.getApiFilter(this.uiFilter);\n      this.panelCtrl.refresh();\n  }\n\n    getCollapsedText() {\n      var collapsedText = this.uiFilter.getQueryString();\n      return collapsedText;\n    }\n\n  handleQueryError(err) {\n      this.error = err.message || 'Failed to issue metric query';\n      return [];\n  }\n}\n\nOpenNMSFMDatasourceQueryCtrl.templateUrl = 'datasources/fault-ds/partials/query.editor.html';\n\n"]}