{"version":3,"sources":["../../../src/spec/fault_ds_datasource_spec.js"],"names":["describe","uiSegmentSrv","newSegment","value","type","newKey","key","newOperator","operator","newFake","text","cssClass","segment","fake","newPlusButton","newKeyValue","newCondition","condition","mapping","ComparatorMapping","it","done","expect","getUiComparator","Comparators","EQ","to","eql","NE","GE","LE","GT","LT","NULL","throw","label","NOTNULL","LIKE","ILIKE","getApiComparator","NEQ","OperatorMapping","getUiOperator","Operators","AND","OR","getApiOperator","RestrictionMapping","getUiRestriction","Restriction","RestrictionDTO","nestedRestriction","NestedRestriction","withOrRestriction","actualUiQuery","expectedUiQuery","Query","addClause","Clause","ClauseMapping","clause","getApiClause","FilterMapping","apiFilter","Filter","limit","getApiFilter","withClause","uiFilter","getUiFilter","otherFilter","cloneFilter","jsonString","JSON","stringify","object","parse","not","be","an","instanceof","filterObject","restriction","asRestrictionDTO","setAttribute","KEY_PLACEHOLDER","setComparator","setValue","VALUE_PLACEHOLDER","Object","keys","forEach","query","beforeEach","clauses","length","createNewEmptyClause","createNewEmptyNestedClause","control","Controls","AddControl","filter","newClause","action","RemoveControl","each","newQuery","AddNestedControl","have","lengthOf","segments","removeClause","root","clear","getQueryString","expected","verifyNoControls","controls","verifyFullControls","verifyControls","index","updateControls"],"mappings":"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","file":"fault_ds_datasource_spec.js","sourcesContent":["import Q from \"q\";\nimport _ from 'lodash';\nimport {UI} from '../datasources/fault-ds/UI';\nimport {API} from '../opennms';\nimport {Mapping} from '../datasources/fault-ds/Mapping';\nimport {FilterCloner} from '../datasources/fault-ds/FilterCloner';\n\ndescribe(\"OpenNMS_FaultManagement_Datasource\", function() {\n    let uiSegmentSrv = {\n        newSegment: function (value, type) {\n            return {value: value, type: type};\n        },\n        newKey: function (key) {\n            return this.newSegment(key, 'key');\n        },\n        newOperator: function (operator) {\n            return this.newSegment(operator, 'operator');\n        },\n        newFake: function (text, type, cssClass) {\n            let segment = this.newSegment(text, type);\n            segment.fake = true;\n            return segment;\n        },\n        newPlusButton: function () {\n            return this.newFake('', 'plus-button');\n        },\n        newKeyValue: function (value) {\n            return this.newSegment(value, 'value');\n        },\n        newCondition: function (condition) {\n            return this.newSegment(condition, 'condition');\n        }\n    };\n\n    describe('Mapping', function () {\n        describe('ComparatorMapping', function () {\n            let mapping = new Mapping.ComparatorMapping();\n\n            it(\"should map from api to ui comparator\", function (done) {\n                expect(mapping.getUiComparator(API.Comparators.EQ)).to.eql(\"=\");\n                expect(mapping.getUiComparator(API.Comparators.NE)).to.eql(\"!=\");\n                expect(mapping.getUiComparator(API.Comparators.GE)).to.eql(\">=\");\n                expect(mapping.getUiComparator(API.Comparators.LE)).to.eql(\"<=\");\n                expect(mapping.getUiComparator(API.Comparators.GT)).to.eql(\">\");\n                expect(mapping.getUiComparator(API.Comparators.LT)).to.eql(\"<\");\n\n                done();\n            });\n\n            it(\"should NOT map from api to ui comparator\", function(done) {\n                expect(() => mapping.getUiComparator(API.Comparators.NULL)).to.throw(\"No matching UI comparator found for '\" + API.Comparators.NULL.label + \"'.\");\n                expect(() => mapping.getUiComparator(API.Comparators.NOTNULL)).to.throw(\"No matching UI comparator found for '\" + API.Comparators.NOTNULL.label + \"'.\");\n                expect(() => mapping.getUiComparator(API.Comparators.LIKE)).to.throw(\"No matching UI comparator found for '\" + API.Comparators.LIKE.label + \"'.\");\n                expect(() => mapping.getUiComparator(API.Comparators.ILIKE)).to.throw(\"No matching UI comparator found for '\" + API.Comparators.ILIKE.label + \"'.\");\n\n                done();\n            });\n\n            it(\"should map from ui to api comparator\", function (done) {\n                expect(mapping.getApiComparator(UI.Comparators.EQ)).to.eql(API.Comparators.EQ);\n                expect(mapping.getApiComparator(UI.Comparators.NEQ)).to.eql(API.Comparators.NE);\n                expect(mapping.getApiComparator(UI.Comparators.GE)).to.eql(API.Comparators.GE);\n                expect(mapping.getApiComparator(UI.Comparators.LE)).to.eql(API.Comparators.LE);\n                expect(mapping.getApiComparator(UI.Comparators.GT)).to.eql(API.Comparators.GT);\n                expect(mapping.getApiComparator(UI.Comparators.LT)).to.eql(API.Comparators.LT);\n\n                done();\n            });\n        });\n\n        describe('OperatorMapping', function () {\n            let mapping = new Mapping.OperatorMapping();\n\n            it(\"should map from api to ui operator\", function (done) {\n                expect(mapping.getUiOperator(API.Operators.AND)).to.eql(\"AND\");\n                expect(mapping.getUiOperator(API.Operators.OR)).to.eql(\"OR\");\n\n                done();\n            });\n\n            it(\"should map from ui to api operator\", function(done) {\n                expect(mapping.getApiOperator(UI.Operators.AND)).to.eql(API.Operators.AND);\n                expect(mapping.getApiOperator(UI.Operators.OR)).to.eql(API.Operators.OR);\n\n                done();\n            })\n        });\n\n        describe('RestrictionMapping', function () {\n            let mapping = new Mapping.RestrictionMapping(uiSegmentSrv);\n\n            it(\"should map from api restriction\", function (done) {\n                expect(mapping.getUiRestriction(new API.Restriction(\"my-property\", API.Comparators.LE, 'some-value')))\n                    .to.eql(new UI.Restriction(uiSegmentSrv, new UI.RestrictionDTO('my-property', '<=', 'some-value')));\n                done();\n            });\n\n            it(\"should map from api nested restriction\", function (done) {\n                const nestedRestriction = new API.NestedRestriction()\n                    .withOrRestriction(new API.Restriction(\"my-property\", API.Comparators.LE, 'some-value'))\n                    .withOrRestriction(new API.Restriction(\"my-property\", API.Comparators.GE, 'some-other-value'));\n\n                const actualUiQuery = mapping.getUiRestriction(nestedRestriction);\n\n                const expectedUiQuery = new UI.Query(uiSegmentSrv);\n                expectedUiQuery.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.OR, new UI.Restriction(uiSegmentSrv, new UI.RestrictionDTO(\"my-property\", \"<=\", \"some-value\"))));\n                expectedUiQuery.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.OR, new UI.Restriction(uiSegmentSrv, new UI.RestrictionDTO(\"my-property\", \">=\", \"some-other-value\"))));\n\n                expect(actualUiQuery).to.eql(expectedUiQuery);\n\n                done();\n            });\n\n        });\n\n        describe('ClauseMapping', function() {\n            let mapping = new Mapping.ClauseMapping(uiSegmentSrv);\n\n           it ('should ignore not initialized clauses (restrictionDTO is null)', function(done) {\n\n               let clause = new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.Restriction(this.uiSegmentSrv));\n               expect(mapping.getApiClause(clause)).to.eql(null);\n\n               done();\n           }) ;\n        });\n\n        describe('FilterMapping', function() {\n\n            let mapping = new Mapping.FilterMapping(uiSegmentSrv);\n\n            it ('should map from empty ui to api filter', function(done) {\n                let apiFilter = new API.Filter();\n                apiFilter.limit = 0;\n                expect(mapping.getApiFilter(new UI.Filter(uiSegmentSrv))).to.eql(apiFilter);\n\n                done();\n            });\n\n            it ('should map from api to ui filter and vice versa', function(done) {\n                const apiFilter = new API.Filter()\n                    .withClause(new API.Clause(new API.Restriction(\"key\", API.Comparators.EQ, \"value\"), API.Operators.OR))\n                    .withClause(new API.Clause(new API.Restriction(\"key2\", API.Comparators.NE, \"value2\"), API.Operators.AND));\n                apiFilter.limit = 0;\n\n                const uiFilter = new UI.Filter(uiSegmentSrv)\n                    .withClause(new UI.Clause(uiSegmentSrv, UI.Operators.OR, new UI.RestrictionDTO(\"key\", \"=\", \"value\")))\n                    .withClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"key2\", \"!=\", \"value2\")));\n\n                expect(mapping.getUiFilter(apiFilter)).to.eql(uiFilter);\n                expect(mapping.getApiFilter(uiFilter)).to.eql(apiFilter);\n\n                done();\n            });\n        });\n\n    });\n\n    describe('FilterCloner', function() {\n\n        let apiFilter = new API.Filter()\n            .withClause(new API.Clause(new API.Restriction('key', API.Comparators.EQ, 'value'), API.Operators.AND))\n            .withClause(new API.Clause(new API.Restriction('key2', API.Comparators.EQ, 'value2'), API.Operators.AND))\n            .withClause(new API.Clause(new API.NestedRestriction()\n                .withClause(new API.Clause(new API.Restriction(\"key3\", API.Comparators.NE, \"value3\"), API.Operators.OR)), API.Operators.AND));\n\n        it('should clone already initialized', function(done) {\n            const otherFilter = new FilterCloner().cloneFilter(apiFilter);\n            expect(apiFilter).to.eql(otherFilter);\n\n            done();\n        });\n\n        it('should clone', function(done) {\n            const jsonString = JSON.stringify(apiFilter);\n            const object = JSON.parse(jsonString);\n            expect(object).not.to.be.an.instanceof(API.Filter);\n\n            const filterObject = new FilterCloner().cloneFilter(object);\n            expect(filterObject).to.be.an.instanceof(API.Filter);\n            expect(apiFilter).to.eql(filterObject);\n\n            done();\n        });\n\n\n    });\n\n    describe(\"UI.Restriction\", function() {\n        // See HELM-25\n        it('should only convert to DTO when fully defined', () => {\n            // Should be null when not initialized\n            const restriction = new UI.Restriction(uiSegmentSrv);\n            expect(restriction.asRestrictionDTO()).to.eql(null);\n\n            // Should be null when initialized with defaults\n            restriction.setAttribute(UI.Restriction.KEY_PLACEHOLDER);\n            restriction.setComparator(\"=\");\n            restriction.setValue(UI.Restriction.VALUE_PLACEHOLDER);\n\n            // Should be null for all other Comparators\n            Object.keys(UI.Comparators).forEach(key => {\n                restriction.setComparator(UI.Comparators[key]);\n                expect(restriction.asRestrictionDTO()).to.eql(null);\n            });\n\n            // Should be null if value is set\n            restriction.setValue(\"my value\");\n            expect(restriction.asRestrictionDTO()).to.eql(null);\n\n            // Should be null if attribute is set\n            restriction.setValue(UI.Restriction.VALUE_PLACEHOLDER);\n            restriction.setAttribute(\"my attribute\");\n            expect(restriction.asRestrictionDTO()).to.eql(null);\n\n            // should not be null if attribute and value is set\n            restriction.setAttribute(\"my attribute\");\n            restriction.setComparator(\"=\");\n            restriction.setValue(\"my value\");\n            expect(restriction.asRestrictionDTO()).not.to.eql(null);\n            expect(restriction.asRestrictionDTO()).to.eql(new UI.RestrictionDTO(\"my attribute\", \"=\", \"my value\"))\n        });\n    });\n\n    describe(\"UI.Query\", function() {\n        let query;\n\n        beforeEach(function () {\n            query = new UI.Filter(uiSegmentSrv).query;\n        });\n\n        it('should add new empty clause', function(done) {\n            expect(query.clauses.length).to.eql(0);\n            query.createNewEmptyClause();\n            expect(query.clauses.length).to.eql(1);\n\n            done();\n        });\n\n        it('should add new empty nested clause', function(done) {\n\n            expect(query.clauses.length).to.eql(0);\n            query.createNewEmptyNestedClause();\n            expect(query.clauses.length).to.eql(1);\n\n            expect(query.clauses[0].restriction.clauses.length).to.eql(1);\n\n            done();\n        });\n    });\n\n    describe(\"UI.Controls\", function() {\n\n        let uiFilter;\n\n        beforeEach(function() {\n            uiFilter = new UI.Filter(uiSegmentSrv);\n        });\n\n        describe('AddControl', function() {\n            let control = new UI.Controls.AddControl();\n\n            describe(\"filter\", function() {\n                it('always show, except for nested controls', function(done) {\n                    expect(control.filter(uiFilter.query, new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.Restriction(uiSegmentSrv)))).to.eql(true);\n\n                    expect(control.filter(uiFilter.query, new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.Query(uiSegmentSrv)))).to.eql(false);\n\n                    done();\n                })\n            });\n\n            describe(\"action\", function() {\n\n              it ('should add new empty clause', function(done) {\n                  const newClause = uiFilter.query.createNewEmptyClause();\n                  expect(uiFilter.query.clauses.length).to.eql(1);\n\n                  control.action(uiFilter.query, newClause);\n                  expect(uiFilter.query.clauses.length).to.eql(2);\n\n                  done();\n              });\n            });\n\n        });\n\n        describe('RemoveControl', function() {\n\n            let control = new UI.Controls.RemoveControl();\n\n            describe(\"filter\", function() {\n                it('do not show on first empty clause', function(done) {\n                    uiFilter.query.createNewEmptyClause();\n\n                    expect(control.filter(uiFilter.query, uiFilter.query.clauses[0])).to.eql(false);\n\n                    done();\n                });\n\n                it('show on nested and children of nested clause', function(done) {\n\n                    uiFilter.query.createNewEmptyNestedClause();\n\n                    expect(uiFilter.query.clauses.length).to.eql(1);\n                    expect(control.filter(uiFilter.query, uiFilter.query.clauses[0])).to.eql(false); // no control on nested clause\n                    expect(control.filter(uiFilter.query.clauses[0].restriction, uiFilter.query.clauses[0].restriction.clauses[0])).to.eql(true); // control on clause\n\n                    done();\n                });\n\n                it('show on other clauses', function(done) {\n                    uiFilter.query.createNewEmptyClause();\n                    uiFilter.query.createNewEmptyClause();\n\n                    _.each(uiFilter.query.clauses, clause => {\n                        expect(control.filter(uiFilter.query, clause)).to.eql(true);\n                    });\n\n                    done();\n                });\n            });\n\n\n            describe(\"action\", function() {\n                it ('should remove clause', function(done) {\n                    // add dummy clause\n                    uiFilter.query.createNewEmptyClause();\n                    expect(uiFilter.query.clauses.length).to.eql(1);\n\n                    // perform action\n                    control.action(uiFilter.query, uiFilter.query.clauses[0]);\n\n                    // verify it was removed\n                    expect(uiFilter.query.clauses.length).to.eql(0);\n\n                    done();\n                });\n\n                it ('should remove query from parent clause if last clause was removed', function(done) {\n                    // dummy clause added yet\n                    uiFilter.query.createNewEmptyClause();\n                    expect(uiFilter.query.clauses.length).to.eql(1);\n\n                    // add nested clause\n                    const newQuery = uiFilter.query.createNewEmptyNestedClause();\n                    expect(uiFilter.query.clauses.length).to.eql(2);\n                    expect(newQuery.clauses.length).to.eql(1);\n\n                    // perform action ...\n                    control.action(newQuery, newQuery.clauses[0]);\n\n                    // ... and verify that it was removed\n                    expect(newQuery.clauses.length).to.eql(0);\n                    expect(uiFilter.query.clauses.length).to.eql(1);\n\n                    done();\n                });\n            });\n\n        });\n\n        describe('NestedControl', function() {\n            let control = new UI.Controls.AddNestedControl();\n\n            describe(\"filter\", function() {\n                it('show on all 1st level clauses, except nested clause', function(done) {\n                    uiFilter.query.createNewEmptyClause();\n                    uiFilter.query.createNewEmptyClause();\n                    uiFilter.query.createNewEmptyClause();\n\n                    _.each(uiFilter.query.clauses, clause => {\n                        expect(control.filter(uiFilter.query, clause)).to.eql(true);\n                    });\n\n                    // Try nested\n                    uiFilter.query.createNewEmptyNestedClause();\n                    expect(control.filter(uiFilter.query, uiFilter.query.clauses[3])).to.eql(false);\n\n                    done();\n                });\n\n                it('do not show on 2nd level clauses ', function(done) {\n                    uiFilter.query.createNewEmptyNestedClause();\n                    uiFilter.query.createNewEmptyClause();\n\n                    const newQuery = uiFilter.query.clauses[0].restriction;\n                    newQuery.createNewEmptyClause();\n                    newQuery.createNewEmptyClause();\n                    newQuery.createNewEmptyClause();\n\n                    // verify 2nd level\n                    _.each(newQuery.clauses, clause => {\n                        expect(control.filter(newQuery, clause)).to.eql(false);\n                    });\n\n                    // verify 1st level\n                    expect(control.filter(uiFilter.query, uiFilter.query.clauses[0])).to.eql(false);\n                    expect(control.filter(uiFilter.query, uiFilter.query.clauses[1])).to.eql(true);\n\n\n                    done();\n                })\n            });\n        });\n    });\n\n    describe('UI.Filter', function () {\n        let uiFilter;\n\n        beforeEach(function () {\n            uiFilter = new UI.Filter(uiSegmentSrv);\n        });\n\n        describe('addClause', function () {\n            it('should allow adding a single restriction', function (done) {\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"severity\", UI.Comparators.EQ, 'CLEARED')));\n                expect(uiFilter.query.clauses).to.have.lengthOf(1);\n                expect(uiFilter.query.clauses[0].restriction.segments).to.have.lengthOf(3);\n                expect(uiFilter.query.clauses[0].restriction.segments[0].value).to.eql('severity');\n                expect(uiFilter.query.clauses[0].restriction.segments[1].value).to.eql(\"=\");\n                expect(uiFilter.query.clauses[0].restriction.segments[2].value).to.eql('CLEARED');\n                expect(uiFilter.query.clauses[0].operator.value).to.eql(\"AND\");\n\n                done();\n            });\n\n            it('should fail when unsupported type', function (done) {\n\n                expect(() => uiFilter.addClause(\"string\")).to.throw(\"Clause type is not supported\");\n\n                done();\n            })\n        });\n\n        describe('removeClause', function() {\n            const clause = new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"key\", \"=\", \"value\"));\n\n            it(\"should not remove non existing clause\", function(done) {\n                expect(uiFilter.query.clauses).to.have.lengthOf(0);\n                uiFilter.withClause(clause);\n                uiFilter.removeClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"x\", \"=\", \"0\")));\n                expect(uiFilter.query.clauses).to.have.lengthOf(1);\n\n                done();\n            });\n\n            it(\"should remove existing clause\", function(done) {\n                expect(uiFilter.query.clauses).to.have.lengthOf(0);\n                uiFilter.withClause(clause);\n                expect(uiFilter.query.clauses).to.have.lengthOf(1);\n                uiFilter.removeClause(clause);\n                expect(uiFilter.query.clauses).to.have.lengthOf(0);\n\n                done();\n            });\n        });\n\n        describe('clear', function () {\n            it('should reset query', function (done) {\n                uiFilter.query.root = false; // make it pass\n                expect(uiFilter.query).to.eql(new UI.Query(uiSegmentSrv));\n\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"key\", \"=\", \"value\")));\n                expect(uiFilter.query).not.to.eql(new UI.Query(uiSegmentSrv));\n\n                uiFilter.clear();\n                expect(uiFilter.query).to.eql(new UI.Query(uiSegmentSrv));\n\n                done();\n            });\n        });\n\n        describe('getQueryString', function () {\n            it('should work with empty clause', function (done) {\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms\");\n                done();\n            });\n\n            it('should work with single clause', function (done) {\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO('severity', UI.Comparators.EQ, 'MINOR')));\n\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where severity = 'MINOR'\");\n                done();\n            });\n\n            it('should not include not initialized clauses (restrictionDTO is not fully initialized)', function(done) {\n                const expected = \"select all alarms where severity >= 'WARNING'\";\n\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.OR, new UI.RestrictionDTO(\"severity\", UI.Comparators.GE, 'WARNING')));\n                expect(uiFilter.getQueryString()).to.eql(expected);\n\n                // It does not have any attribute, comparator or value data (valid state), but should not be considered when generating the string\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.OR, new UI.Restriction(uiSegmentSrv)));\n                expect(uiFilter.getQueryString()).to.eql(expected);\n\n                done();\n            });\n\n\n            it('should handle null values', function (done) {\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"location\", UI.Comparators.EQ, \"null\")));\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where location is null\");\n\n                uiFilter.clear();\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO(\"location\", UI.Comparators.NEQ, \"null\")));\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where location is not null\");\n\n                done();\n            });\n\n            it('should work with multiple clauses', function (done) {\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO('severity', UI.Comparators.EQ, 'MINOR')));\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.OR, new UI.RestrictionDTO('severity', UI.Comparators.EQ, 'MAJOR')));\n\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where severity = 'MINOR' or severity = 'MAJOR'\");\n\n                uiFilter.clear();\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO('severity', UI.Comparators.EQ, 'MINOR')));\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO('severity', UI.Comparators.EQ, 'MAJOR')));\n\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where severity = 'MINOR' and severity = 'MAJOR'\");\n\n                done();\n            });\n\n            it('should work with nested clauses', function (done) {\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO('location', UI.Comparators.EQ, 'Stuttgart')));\n                uiFilter.addClause(new API.Clause(new API.NestedRestriction()\n                    .withClause(new API.Clause(new API.Restriction('severity', API.Comparators.GE, 'WARNING'), API.Operators.AND))\n                    .withClause(new API.Clause(new API.Restriction('severity', API.Comparators.LE, 'MAJOR'), API.Operators.AND)), API.Operators.OR));\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where location = 'Stuttgart' or (severity >= 'WARNING' and severity <= 'MAJOR')\");\n\n\n                // let's try the other way around\n                uiFilter.clear();\n                uiFilter.addClause(new API.Clause(new API.NestedRestriction()\n                    .withClause(new API.Clause(new API.Restriction('severity', API.Comparators.GE, 'WARNING'), API.Operators.AND))\n                    .withClause(new API.Clause(new API.Restriction('severity', API.Comparators.LE, 'MAJOR'), API.Operators.AND)), API.Operators.OR));\n                uiFilter.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.RestrictionDTO('location', UI.Comparators.EQ, 'Stuttgart')));\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where (severity >= 'WARNING' and severity <= 'MAJOR') and location = 'Stuttgart'\");\n\n                // let's try 2 nested restrictions\n                uiFilter.clear();\n                uiFilter.addClause(new API.Clause(new API.NestedRestriction()\n                    .withClause(new API.Clause(new API.Restriction('location', API.Comparators.EQ, 'Stuttgart'), API.Operators.OR))\n                    .withClause(new API.Clause(new API.Restriction('location', API.Comparators.EQ, 'Fulda'), API.Operators.OR)), API.Operators.AND)\n                );\n                uiFilter.addClause(new API.Clause(new API.NestedRestriction()\n                    .withClause(new API.Clause(new API.Restriction('severity', API.Comparators.GE, 'WARNING'), API.Operators.AND))\n                    .withClause(new API.Clause(new API.Restriction('severity', API.Comparators.LE, 'MAJOR'), API.Operators.AND)), API.Operators.AND)\n                );\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where (location = 'Stuttgart' or location = 'Fulda') and (severity >= 'WARNING' and severity <= 'MAJOR')\");\n\n                done();\n            });\n\n            it('should handle deep nested clauses', function (done) {\n                const nestedRestriction = new API.NestedRestriction()\n                    .withClause(new API.Clause(new API.Restriction(\"severity\", API.Comparators.GE, 'WARNING'), API.Operators.AND))\n                    .withClause(new API.Clause(new API.Restriction(\"severity\", API.Comparators.LE, 'MAJOR'), API.Operators.AND))\n                    .withClause(new API.Clause(new API.NestedRestriction()\n                        .withClause(new API.Clause(new API.Restriction(\"location\", API.Comparators.EQ, \"Fulda\"), API.Operators.OR)), API.Operators.OR), API.Operators.OR);\n\n                uiFilter.addClause(new API.Clause(nestedRestriction, API.Operators.OR));\n\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where (severity >= 'WARNING' and severity <= 'MAJOR' or (location = 'Fulda'))\");\n\n                done();\n            });\n\n            it('should render real nested clauses correctly', function(done) {\n                // Dummy clause should not influence the query\n                uiFilter.query.createNewEmptyNestedClause();\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms\");\n\n                // update the values\n                const query = uiFilter.query.clauses[0].restriction;\n                query.clauses[0].restriction.setAttribute(\"key\");\n                query.clauses[0].restriction.setComparator(\"=\");\n                query.clauses[0].restriction.setValue(\"value\");\n\n                // should now be influenced\n                expect(uiFilter.getQueryString()).to.eql(\"select all alarms where (key = 'value')\");\n\n                done();\n            });\n        });\n\n        describe(\"updateControls\", function() {\n\n            const verifyNoControls = function(query) {\n                _.each(query.clauses, clause => {\n                    expect(clause.controls.length).to.eql(0);\n                });\n            };\n\n            const verifyFullControls = function(clause) {\n                verifyControls(clause, [UI.Controls.RemoveControl, UI.Controls.AddControl, UI.Controls.AddNestedControl]);\n            };\n\n            const verifyControls = function(clause, controls = []) {\n                expect(clause.controls.length).to.eql(controls.length); // add, add nested and remove\n                if (controls.length > 0) {\n                    _.each(controls, (control, index) => {\n                       expect(clause.controls[index]).to.be.an.instanceof(control)\n                    });\n                }\n            };\n\n            it ('should create controls for add and add nested', function(done) {\n                verifyNoControls(uiFilter.query);\n                expect(uiFilter.query.clauses.length).to.eql(0);\n\n                // Update controls\n                uiFilter.updateControls();\n                expect(uiFilter.query.clauses.length).to.eql(1); // dummy row\n\n                // now the controls should be there\n                _.each(uiFilter.query.clauses, clause => {\n                    verifyControls(clause, [UI.Controls.AddControl, UI.Controls.AddNestedControl]);\n                });\n\n                done();\n            });\n\n            it ('should create controls for add, add nested and remove', function(done) {\n                verifyNoControls(uiFilter.query);\n\n                uiFilter.query.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.Restriction(uiSegmentSrv, new UI.RestrictionDTO(\"key\", \"=\", \"value\"))));\n                uiFilter.updateControls();\n\n                expect(uiFilter.query.clauses.length).to.eql(1);\n                _.each(uiFilter.query.clauses, clause => {\n                    verifyFullControls(clause);\n                });\n\n                done();\n\n            });\n\n            it ('should not add nested controls on level 2', function(done) {\n                verifyNoControls(uiFilter.query);\n\n                uiFilter.query.addClause(new UI.Clause(uiSegmentSrv, UI.Operators.AND, new UI.Restriction(uiSegmentSrv, new UI.RestrictionDTO(\"key\", \"=\", \"value\"))));\n                uiFilter.query.createNewEmptyNestedClause();\n                uiFilter.updateControls();\n\n                expect(uiFilter.query.clauses.length).to.eql(2);\n                expect(uiFilter.query.clauses[1].restriction.clauses.length).to.eql(1);\n                verifyFullControls(uiFilter.query.clauses[0]); // all controls on simple clause\n                verifyControls(uiFilter.query.clauses[1], [ ]); // no controls on nested clause\n                verifyControls(uiFilter.query.clauses[1].restriction.clauses[0], [ UI.Controls.RemoveControl, UI.Controls.AddControl ]); // limited controls on clause of nested clause\n\n                done();\n            });\n        })\n\n    });\n\n});"]}