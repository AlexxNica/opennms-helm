{"version":3,"sources":["../../../../src/panels/alarm-table/module.js"],"names":["AlarmTableCtrl","$scope","$injector","$rootScope","annotationsSrv","$sanitize","$compile","datasourceSrv","timeSrv","panelDefaults","targets","transform","pageSize","showHeader","styles","type","pattern","alias","dateFormat","unit","decimals","colors","colorMode","thresholds","columns","scroll","fontSize","sort","col","desc","pageIndex","panel","fields","defaults","events","on","onDataReceived","bind","onDataError","onInitEditMode","addEditorTab","datasource","setTimeQueryStart","getAnnotations","dashboard","range","then","data","annotations","err","dataRaw","render","dataList","length","table","renderer","isTimezoneUtc","colIndex","scope","elem","attrs","ctrl","pageCount","formaters","getTableHeight","panelHeight","height","appendTableRows","tbodyElem","setTable","empty","html","contents","switchPage","e","el","currentTarget","parseInt","text","renderPanel","appendPaginationControls","footerElem","Math","ceil","rows","startPage","max","endPage","min","paginationList","i","activeClass","pageLinkElem","append","panelElem","parents","rootElem","find","css","addClass","unbindDestroy","$on","off","renderData","renderingCompleted","source","alarmId","alarm","each","matchedRow","row","meta","id","undefined","findAlarm","appEvent","newScope","$new","templateHtml","action","self","get","ds","indexOf","message","name","error","refreshDashboard","catch","performAlarmActionOnDatasource","templateUrl","PanelCtrl","directive"],"mappings":"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","file":"module.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport {transformDataToTable} from './transformers';\nimport {tablePanelEditor} from './editor';\nimport {columnOptionsTab} from './column_options';\nimport {TableRenderer} from './renderer';\nimport coreModule from 'app/core/core_module';\nimport {alarmDetailsAsDirective} from './alarm_details';\nimport {memoEditorAsDirective} from \"./memo_editor\"\nimport '../css/styles.css!'\nimport '../css/ionicons.css!'\n\nclass AlarmTableCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $rootScope, annotationsSrv, $sanitize, $compile, datasourceSrv, timeSrv) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n    this.annotationsSrv = annotationsSrv;\n    this.$sanitize = $sanitize;\n    this.$compile = $compile;\n    this.datasourceSrv = datasourceSrv;\n    this.timeSrv = timeSrv;\n\n    let panelDefaults = {\n      targets: [{}],\n      transform: 'table',\n      pageSize: null,\n      showHeader: true,\n      styles: [\n        {\n          type: 'date',\n          pattern: 'Time',\n          alias: 'Time',\n          dateFormat: 'YYYY-MM-DD HH:mm:ss',\n        },\n        {\n          unit: 'short',\n          type: 'number',\n          alias: '',\n          decimals: 2,\n          colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n          colorMode: null,\n          pattern: '/.*/',\n          thresholds: [],\n        }\n      ],\n      columns: [],\n      scroll: true,\n      fontSize: '100%',\n      sort: {col: 0, desc: true},\n    };\n\n    this.pageIndex = 0;\n\n    if (this.panel.styles === void 0) {\n      this.panel.styles = this.panel.columns;\n      this.panel.columns = this.panel.fields;\n      delete this.panel.columns;\n      delete this.panel.fields;\n    }\n\n    _.defaults(this.panel, panelDefaults);\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n\n  onInitEditMode() {\n    this.addEditorTab('Options', tablePanelEditor, 2);\n    this.addEditorTab('Column Styles', columnOptionsTab, 3);\n  }\n\n  issueQueries(datasource) {\n    this.pageIndex = 0;\n\n    if (this.panel.transform === 'annotations') {\n      this.setTimeQueryStart();\n      return this.annotationsSrv.getAnnotations({dashboard: this.dashboard, panel: this.panel, range: this.range})\n        .then(annotations => {\n          return {data: annotations};\n        });\n    }\n\n    return super.issueQueries(datasource);\n  }\n\n  onDataError(err) {\n    this.dataRaw = [];\n    this.render();\n  }\n\n  onDataReceived(dataList) {\n    this.dataRaw = dataList;\n    this.pageIndex = 0;\n\n    // automatically correct transform mode based on data\n    if (this.dataRaw && this.dataRaw.length) {\n      if (this.dataRaw[0].type === 'table') {\n        this.panel.transform = 'table';\n      } else {\n        if (this.dataRaw[0].type === 'docs') {\n          this.panel.transform = 'json';\n        } else {\n          if (this.panel.transform === 'table' || this.panel.transform === 'json') {\n            this.panel.transform = 'timeseries_to_rows';\n          }\n        }\n      }\n    }\n\n    this.render();\n  }\n\n  render() {\n    this.table = transformDataToTable(this.dataRaw, this.panel);\n    this.table.sort(this.panel.sort);\n\n    this.renderer = new TableRenderer(this.panel, this.table, this.dashboard.isTimezoneUtc(), this.$sanitize);\n\n    return super.render(this.table);\n  }\n\n  toggleColumnSort(col, colIndex) {\n    // remove sort flag from current column\n    if (this.table.columns[this.panel.sort.col]) {\n      this.table.columns[this.panel.sort.col].sort = false;\n    }\n\n    if (this.panel.sort.col === colIndex) {\n      if (this.panel.sort.desc) {\n        this.panel.sort.desc = false;\n      } else {\n        this.panel.sort.col = null;\n      }\n    } else {\n      this.panel.sort.col = colIndex;\n      this.panel.sort.desc = true;\n    }\n    this.render();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    let data;\n    let panel = ctrl.panel;\n    let pageCount = 0;\n    let formaters = [];\n\n    function getTableHeight() {\n      let panelHeight = ctrl.height;\n\n      if (pageCount > 1) {\n        panelHeight -= 26;\n      }\n\n      return (panelHeight - 31) + 'px';\n    }\n\n    function appendTableRows(tbodyElem) {\n      ctrl.renderer.setTable(data);\n      tbodyElem.empty();\n      tbodyElem.html(ctrl.renderer.render(ctrl.pageIndex));\n      // Compile the HTML generated by the renderer - this is required for the actions dropdown to function\n      ctrl.$compile(tbodyElem.contents())(scope);\n    }\n\n    function switchPage(e) {\n      let el = $(e.currentTarget);\n      ctrl.pageIndex = (parseInt(el.text(), 10) - 1);\n      renderPanel();\n    }\n\n    function appendPaginationControls(footerElem) {\n      footerElem.empty();\n\n      let pageSize = panel.pageSize || 100;\n      pageCount = Math.ceil(data.rows.length / pageSize);\n      if (pageCount === 1) {\n        return;\n      }\n\n      let startPage = Math.max(ctrl.pageIndex - 3, 0);\n      let endPage = Math.min(pageCount, startPage + 9);\n\n      let paginationList = $('<ul></ul>');\n\n      for (let i = startPage; i < endPage; i++) {\n        let activeClass = i === ctrl.pageIndex ? 'active' : '';\n        let pageLinkElem = $('<li><a class=\"table-panel-page-link pointer ' + activeClass + '\">' + (i + 1) + '</a></li>');\n        paginationList.append(pageLinkElem);\n      }\n\n      footerElem.append(paginationList);\n    }\n\n    function renderPanel() {\n      let panelElem = elem.parents('.panel');\n      let rootElem = elem.find('.table-panel-scroll');\n      let tbodyElem = elem.find('tbody');\n      let footerElem = elem.find('.table-panel-footer');\n\n      elem.css({'font-size': panel.fontSize});\n      panelElem.addClass('table-panel-wrapper');\n\n      appendTableRows(tbodyElem);\n      appendPaginationControls(footerElem);\n\n      rootElem.css({'max-height': panel.scroll ? getTableHeight() : ''});\n    }\n\n    elem.on('click', '.table-panel-page-link', switchPage);\n\n    let unbindDestroy = scope.$on('$destroy', function () {\n      elem.off('click', '.table-panel-page-link');\n      unbindDestroy();\n    });\n\n    ctrl.events.on('render', function (renderData) {\n      data = renderData || data;\n      if (data) {\n        renderPanel();\n      }\n      ctrl.renderingCompleted();\n    });\n  }\n\n  // Alarm related actions\n\n  findAlarm(source, alarmId) {\n    let alarm;\n    _.each(this.dataRaw, table => {\n      let matchedRow = _.find(table.rows, row => {\n        return row.meta.source === source && row.meta.alarm.id === alarmId;\n      });\n      if (matchedRow !== undefined) {\n        alarm = matchedRow.meta.alarm;\n      }\n    });\n    return alarm;\n  }\n\n  alarmDetails(source, alarmId) {\n    let alarm = this.findAlarm(source, alarmId);\n    if (alarm === undefined) {\n      this.$rootScope.appEvent('alert-error', ['Unable to find matching alarm', '']);\n      return;\n    }\n\n    let newScope = this.$rootScope.$new();\n    newScope.alarm = alarm;\n    newScope.source = source;\n    this.$rootScope.appEvent('show-modal', {\n      templateHtml: '<alarm-details-as-modal dismiss=\"dismiss()\"></alarm-details-as-modal>',\n      scope: newScope\n    });\n  }\n\n  performAlarmActionOnDatasource(source, action, alarmId) {\n    let self = this;\n    this.datasourceSrv.get(source).then(ds => {\n      if (ds.type && ds.type.indexOf(\"fm-ds\") < 0) {\n        throw {message: 'Only OpenNMS datasources are supported'};\n      } else {\n        if (!ds[action]) {\n          throw {message: 'Action ' + action + ' not implemented by datasource ' + ds.name + \" of type \" + ds.type};\n        }\n        return ds[action](alarmId);\n      }\n    }).then(() => {\n      // Action was successful, remove any previous error\n      delete self.error;\n      // Refresh the dashboard\n      self.timeSrv.refreshDashboard();\n    }).catch(err => {\n      self.error = err.message || \"Request Error\";\n    });\n  }\n\n  acknowledgeAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'acknowledgeAlarm', alarmId);\n  }\n\n  unacknowledgeAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'unacknowledgeAlarm', alarmId);\n  }\n\n  clearAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'clearAlarm', alarmId);\n  }\n\n  escalateAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'escalateAlarm', alarmId);\n  }\n\n  createTicketForAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'createTicketForAlarm', alarmId);\n  }\n\n  updateTicketForAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'updateTicketForAlarm', alarmId);\n  }\n\n  closeTicketForAlarm(source, alarmId) {\n    this.performAlarmActionOnDatasource(source, 'closeTicketForAlarm', alarmId);\n  }\n}\n\nAlarmTableCtrl.templateUrl = 'panels/alarm-table/module.html';\n\nexport {\n  AlarmTableCtrl,\n  AlarmTableCtrl as PanelCtrl\n};\n\ncoreModule.directive('alarmDetailsAsModal',  alarmDetailsAsDirective);\ncoreModule.directive('memoEditor',  memoEditorAsDirective);\n"]}